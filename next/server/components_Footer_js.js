/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "components_Footer_js";
exports.ids = ["components_Footer_js"];
exports.modules = {

/***/ "./node_modules/@swc/helpers/lib/_interop_require_wildcard.js":
/*!********************************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_interop_require_wildcard.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = _interopRequireWildcard;\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _getRequireWildcardCache(nodeInterop1) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop1);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9faW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHdhLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9faW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkLmpzPzA1MWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZDtcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaiwgbm9kZUludGVyb3ApIHtcbiAgICBpZiAoIW5vZGVJbnRlcm9wICYmIG9iaiAmJiBvYmouX19lc01vZHVsZSkge1xuICAgICAgICByZXR1cm4gb2JqO1xuICAgIH1cbiAgICBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogIT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG9iaiAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkZWZhdWx0OiBvYmpcbiAgICAgICAgfTtcbiAgICB9XG4gICAgdmFyIGNhY2hlID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKTtcbiAgICBpZiAoY2FjaGUgJiYgY2FjaGUuaGFzKG9iaikpIHtcbiAgICAgICAgcmV0dXJuIGNhY2hlLmdldChvYmopO1xuICAgIH1cbiAgICB2YXIgbmV3T2JqID0ge307XG4gICAgdmFyIGhhc1Byb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuICAgIGZvcih2YXIga2V5IGluIG9iail7XG4gICAgICAgIGlmIChrZXkgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHtcbiAgICAgICAgICAgIHZhciBkZXNjID0gaGFzUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiBudWxsO1xuICAgICAgICAgICAgaWYgKGRlc2MgJiYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSkge1xuICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7XG4gICAgaWYgKGNhY2hlKSB7XG4gICAgICAgIGNhY2hlLnNldChvYmosIG5ld09iaik7XG4gICAgfVxuICAgIHJldHVybiBuZXdPYmo7XG59XG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3AxKSB7XG4gICAgaWYgKHR5cGVvZiBXZWFrTWFwICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybiBudWxsO1xuICAgIHZhciBjYWNoZUJhYmVsSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7XG4gICAgdmFyIGNhY2hlTm9kZUludGVyb3AgPSBuZXcgV2Vha01hcCgpO1xuICAgIHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24obm9kZUludGVyb3ApIHtcbiAgICAgICAgcmV0dXJuIG5vZGVJbnRlcm9wID8gY2FjaGVOb2RlSW50ZXJvcCA6IGNhY2hlQmFiZWxJbnRlcm9wO1xuICAgIH0pKG5vZGVJbnRlcm9wMSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\n");

/***/ }),

/***/ "./node_modules/@swc/helpers/lib/_object_without_properties_loose.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_object_without_properties_loose.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = _objectWithoutPropertiesLoose;\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fb2JqZWN0X3dpdGhvdXRfcHJvcGVydGllc19sb29zZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsdUJBQXVCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3B3YS1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9saWIvX29iamVjdF93aXRob3V0X3Byb3BlcnRpZXNfbG9vc2UuanM/NGNiOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlO1xuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICAgIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICAgIHZhciB0YXJnZXQgPSB7fTtcbiAgICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gICAgdmFyIGtleSwgaTtcbiAgICBmb3IoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAga2V5ID0gc291cmNlS2V5c1tpXTtcbiAgICAgICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\n");

/***/ }),

/***/ "./components/Contact.js":
/*!*******************************!*\
  !*** ./components/Contact.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_future_image__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/future/image */ \"./node_modules/next/future/image.js\");\n/* harmony import */ var next_future_image__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_future_image__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__);\nvar _jsxFileName = \"C:\\\\sites\\\\aboutinsurances\\\\components\\\\Contact.js\";\n\n\n\n\nconst Contact = () => {\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"div\", {\n    className: \"select-none container max-w-5xl mx-auto w-full bg-opacity-0 rounded text-light-green\",\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"div\", {\n      className: \"grid grid-cols-2\",\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"div\", {\n        className: \"order-1 col-span-full md:col-span-1 py-5 md:py-6 px-6\",\n        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"div\", {\n          className: \"bg-opacity-0 mx-auto max-w-xl flex flex-col space-y-5\",\n          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"div\", {\n            className: \"relative w-14 md:w-18 lg:w-24 h-auto\",\n            children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"a\", {\n              href: \"#home\",\n              children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)((next_future_image__WEBPACK_IMPORTED_MODULE_1___default()), {\n                src: \"/logos/logo-about-insurances.webp\",\n                alt: \"logo about insurances\",\n                layout: \"responsive\",\n                width: 512,\n                height: 512\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 13,\n                columnNumber: 17\n              }, undefined)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 15\n            }, undefined)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"p\", {\n            className: \"text-sm md:text-md lg:text-lg text-light-gray pb-8\",\n            children: \"Insurance information and tips website. Before contracting any insurance service, visit our website and clarify all your doubts on the subject. We try to bring you the most frequently mentioned questions and the answers to your questions about insurance and insurance agencies. We are very happy to be able to help people answer questions and learn more about how the online insurance market works.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"div\", {\n            className: \"flex justify-center md:justify-start\",\n            children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"ul\", {\n              className: \"flex gap-4 md:gap-6\",\n              children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"li\", {\n                children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"a\", {\n                  href: \"#home\",\n                  title: \"Facebook\",\n                  rel: \"noopener noreferrer\",\n                  target: \"_self\",\n                  className: \"text-[#142039] transition hover:text-[#ff6341]\",\n                  children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"span\", {\n                    className: \"sr-only\",\n                    children: \"Facebook\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 21\n                  }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"svg\", {\n                    className: \"w-8 h-8\",\n                    fill: \"currentColor\",\n                    viewBox: \"0 0 24 24\",\n                    \"aria-hidden\": \"true\",\n                    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"path\", {\n                      fillRule: \"evenodd\",\n                      d: \"M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z\",\n                      clipRule: \"evenodd\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 42,\n                      columnNumber: 23\n                    }, undefined)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 21\n                  }, undefined)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 19\n                }, undefined)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"li\", {\n                children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"a\", {\n                  href: \"#home\",\n                  title: \"Instagram\",\n                  rel: \"noopener noreferrer\",\n                  target: \"_self\",\n                  className: \"text-[#142039] transition hover:text-[#ff6341]\",\n                  children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"span\", {\n                    className: \"sr-only\",\n                    children: \"Instagram\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 21\n                  }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"svg\", {\n                    className: \"w-8 h-8\",\n                    fill: \"currentColor\",\n                    viewBox: \"0 0 24 24\",\n                    \"aria-hidden\": \"true\",\n                    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"path\", {\n                      fillRule: \"evenodd\",\n                      d: \"M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z\",\n                      clipRule: \"evenodd\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 60,\n                      columnNumber: 23\n                    }, undefined)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 21\n                  }, undefined)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 19\n                }, undefined)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"li\", {\n                children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"a\", {\n                  href: \"#home\",\n                  title: \"Twitter\",\n                  rel: \"noopener noreferrer\",\n                  target: \"_self\",\n                  className: \"text-[#142039] transition hover:text-[#ff6341]\",\n                  children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"span\", {\n                    className: \"sr-only\",\n                    children: \"Twitter\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 21\n                  }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"svg\", {\n                    className: \"w-8 h-8\",\n                    fill: \"currentColor\",\n                    viewBox: \"0 0 24 24\",\n                    \"aria-hidden\": \"true\",\n                    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"path\", {\n                      d: \"M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 23\n                    }, undefined)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 21\n                  }, undefined)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, undefined)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, undefined)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, undefined)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, undefined)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, undefined)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"div\", {\n        className: \"order-2 col-span-full md:col-span-1 py-5 md:py-10 px-6\",\n        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"form\", {\n          className: \"bg-opacity-0 rounded mx-auto max-w-xl space-y-4\",\n          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"div\", {\n            className: \"w-full\",\n            children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"ul\", {\n              className: \"flex mx-auto w-max h-full bg-white border-2 border-light-green rounded p-2 items-center\",\n              children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"li\", {\n                children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"a\", {\n                  href: \"https://transparencyreport.google.com/safe-browsing/search?url=https:%2F%2Fconsultbio-jr.vercel.app%2F&hl=pt_BR\",\n                  rel: \"noopener noreferrer\",\n                  target: \"_blank\",\n                  children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"div\", {\n                    className: \"relative w-24 md:w-36 h-auto\",\n                    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)((next_future_image__WEBPACK_IMPORTED_MODULE_1___default()), {\n                      src: \"/logos/logo-google.webp\",\n                      alt: \"Logo Site Seguro - Google\",\n                      title: \"Secure Site - Click to Verify!\",\n                      layout: \"responsive\",\n                      width: 300,\n                      height: 126\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 23\n                    }, undefined)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 21\n                  }, undefined)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, undefined)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, undefined)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, undefined)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, undefined)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, undefined)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, undefined)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, undefined)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, undefined);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Contact);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/Contact.js\n");

/***/ }),

/***/ "./components/Footer.js":
/*!******************************!*\
  !*** ./components/Footer.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Contact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Contact */ \"./components/Contact.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);\nvar _jsxFileName = \"C:\\\\sites\\\\aboutinsurances\\\\components\\\\Footer.js\";\n\n\n\nconst Footer = () => {\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"section\", {\n    id: \"contato\",\n    className: \"select-none mx-auto border-[#142039] border-opacity-70 border-t-4\",\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"footer\", {\n      className: \"select-none bg-gray-200 bg-center bg-cover bg-fixed bg-no-repeat w-screen\",\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_Contact__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        className: \"container max-w-5xl mx-auto px-4 pt-6 pb-6 sm:px-6 lg:px-8 lg:pt-4\",\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n          className: \"w-full pb-4\",\n          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n            className: \"h-1 my-0 py-0 bg-[#142039] bg-opacity-30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, undefined)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n          className: \"grid grid-cols-1 gap-8 md:grid-cols-2\",\n          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"p\", {\n            className: \"text-center text-xs lg:text-sm text-gray-700 md:text-left\",\n            children: \"\\xA92023 About Insurances. All rights reserved.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, undefined)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, undefined)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, undefined)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, undefined)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, undefined);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Footer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0Zvb3Rlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7QUFFQSxNQUFNQyxNQUFNLEdBQUcsTUFBTTtFQUNuQixvQkFDRTtJQUFTLEVBQUUsRUFBQyxTQUFaO0lBQXNCLFNBQVMsRUFBQyxtRUFBaEM7SUFBQSx1QkFDRTtNQUFRLFNBQVMsRUFBQywyRUFBbEI7TUFBQSx3QkFDRSw4REFBQyxnREFBRDtRQUFBO1FBQUE7UUFBQTtNQUFBLGFBREYsZUFHRTtRQUFLLFNBQVMsRUFBQyxvRUFBZjtRQUFBLHdCQUNFO1VBQUssU0FBUyxFQUFDLGFBQWY7VUFBQSx1QkFDRTtZQUFLLFNBQVMsRUFBQztVQUFmO1lBQUE7WUFBQTtZQUFBO1VBQUE7UUFERjtVQUFBO1VBQUE7VUFBQTtRQUFBLGFBREYsZUFJRTtVQUFLLFNBQVMsRUFBQyx1Q0FBZjtVQUFBLHVCQUNFO1lBQUcsU0FBUyxFQUFDLDJEQUFiO1lBQUE7VUFBQTtZQUFBO1lBQUE7WUFBQTtVQUFBO1FBREY7VUFBQTtVQUFBO1VBQUE7UUFBQSxhQUpGO01BQUE7UUFBQTtRQUFBO1FBQUE7TUFBQSxhQUhGO0lBQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtFQURGO0lBQUE7SUFBQTtJQUFBO0VBQUEsYUFERjtBQWtCRCxDQW5CRDs7QUFxQkEsaUVBQWVBLE1BQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wd2EtcHJvamVjdC8uL2NvbXBvbmVudHMvRm9vdGVyLmpzP2UxYWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnRhY3QgZnJvbSAnLi9Db250YWN0J1xyXG5cclxuY29uc3QgRm9vdGVyID0gKCkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8c2VjdGlvbiBpZD1cImNvbnRhdG9cIiBjbGFzc05hbWU9XCJzZWxlY3Qtbm9uZSBteC1hdXRvIGJvcmRlci1bIzE0MjAzOV0gYm9yZGVyLW9wYWNpdHktNzAgYm9yZGVyLXQtNFwiPlxyXG4gICAgICA8Zm9vdGVyIGNsYXNzTmFtZT1cInNlbGVjdC1ub25lIGJnLWdyYXktMjAwIGJnLWNlbnRlciBiZy1jb3ZlciBiZy1maXhlZCBiZy1uby1yZXBlYXQgdy1zY3JlZW5cIj5cclxuICAgICAgICA8Q29udGFjdCAvPlxyXG5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBtYXgtdy01eGwgbXgtYXV0byBweC00IHB0LTYgcGItNiBzbTpweC02IGxnOnB4LTggbGc6cHQtNFwiPlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3LWZ1bGwgcGItNFwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImgtMSBteS0wIHB5LTAgYmctWyMxNDIwMzldIGJnLW9wYWNpdHktMzBcIiAvPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ3JpZC1jb2xzLTEgZ2FwLTggbWQ6Z3JpZC1jb2xzLTJcIj5cclxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXIgdGV4dC14cyBsZzp0ZXh0LXNtIHRleHQtZ3JheS03MDAgbWQ6dGV4dC1sZWZ0XCI+XHJcbiAgICAgICAgICAgICAgwqkyMDIzIEFib3V0IEluc3VyYW5jZXMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Zvb3Rlcj5cclxuICAgIDwvc2VjdGlvbj5cclxuICApXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEZvb3RlciJdLCJuYW1lcyI6WyJDb250YWN0IiwiRm9vdGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Footer.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/future/image.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/future/image.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\"client\";\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = Image;\n\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"./node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\n\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\n\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\n\nvar _object_without_properties_loose = (__webpack_require__(/*! @swc/helpers/lib/_object_without_properties_loose.js */ \"./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\")[\"default\"]);\n\nvar _react = _interop_require_wildcard(__webpack_require__(/*! react */ \"react\"));\n\nvar _head = _interop_require_default(__webpack_require__(/*! ../../shared/lib/head */ \"../shared/lib/head\"));\n\nvar _imageBlurSvg = __webpack_require__(/*! ../../shared/lib/image-blur-svg */ \"../../shared/lib/image-blur-svg\");\n\nvar _imageConfig = __webpack_require__(/*! ../../shared/lib/image-config */ \"../../shared/lib/image-config\");\n\nvar _imageConfigContext = __webpack_require__(/*! ../../shared/lib/image-config-context */ \"../../shared/lib/image-config-context\");\n\nvar _utils = __webpack_require__(/*! ../../shared/lib/utils */ \"../../shared/lib/utils\");\n\nfunction Image(_param) {\n  var {\n    src,\n    sizes,\n    unoptimized = false,\n    priority = false,\n    loading,\n    className,\n    quality,\n    width,\n    height,\n    fill,\n    style,\n    onLoadingComplete,\n    placeholder = 'empty',\n    blurDataURL\n  } = _param,\n      all = _object_without_properties_loose(_param, [\"src\", \"sizes\", \"unoptimized\", \"priority\", \"loading\", \"className\", \"quality\", \"width\", \"height\", \"fill\", \"style\", \"onLoadingComplete\", \"placeholder\", \"blurDataURL\"]);\n\n  const configContext = (0, _react).useContext(_imageConfigContext.ImageConfigContext);\n  const config = (0, _react).useMemo(() => {\n    const c = configEnv || configContext || _imageConfig.imageConfigDefault;\n    const allSizes = [...c.deviceSizes, ...c.imageSizes].sort((a, b) => a - b);\n    const deviceSizes = c.deviceSizes.sort((a, b) => a - b);\n    return _extends({}, c, {\n      allSizes,\n      deviceSizes\n    });\n  }, [configContext]);\n  let rest = all;\n  let loader = defaultLoader;\n\n  if ('loader' in rest) {\n    if (rest.loader) {\n      const customImageLoader = rest.loader;\n\n      var _tmp;\n\n      _tmp = obj => {\n        const {\n          config: _\n        } = obj,\n              opts = _object_without_properties_loose(obj, [\"config\"]); // The config object is internal only so we must\n        // not pass it to the user-defined loader()\n\n\n        return customImageLoader(opts);\n      }, loader = _tmp, _tmp;\n    } // Remove property so it's not spread on <img>\n\n\n    delete rest.loader;\n  }\n\n  let staticSrc = '';\n  let widthInt = getInt(width);\n  let heightInt = getInt(height);\n  let blurWidth;\n  let blurHeight;\n\n  if (isStaticImport(src)) {\n    const staticImageData = isStaticRequire(src) ? src.default : src;\n\n    if (!staticImageData.src) {\n      throw new Error(`An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received ${JSON.stringify(staticImageData)}`);\n    }\n\n    if (!staticImageData.height || !staticImageData.width) {\n      throw new Error(`An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received ${JSON.stringify(staticImageData)}`);\n    }\n\n    blurWidth = staticImageData.blurWidth;\n    blurHeight = staticImageData.blurHeight;\n    blurDataURL = blurDataURL || staticImageData.blurDataURL;\n    staticSrc = staticImageData.src;\n\n    if (!fill) {\n      if (!widthInt && !heightInt) {\n        widthInt = staticImageData.width;\n        heightInt = staticImageData.height;\n      } else if (widthInt && !heightInt) {\n        const ratio = widthInt / staticImageData.width;\n        heightInt = Math.round(staticImageData.height * ratio);\n      } else if (!widthInt && heightInt) {\n        const ratio = heightInt / staticImageData.height;\n        widthInt = Math.round(staticImageData.width * ratio);\n      }\n    }\n  }\n\n  src = typeof src === 'string' ? src : staticSrc;\n  let isLazy = !priority && (loading === 'lazy' || typeof loading === 'undefined');\n\n  if (src.startsWith('data:') || src.startsWith('blob:')) {\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n    unoptimized = true;\n    isLazy = false;\n  }\n\n  if (config.unoptimized) {\n    unoptimized = true;\n  }\n\n  const [blurComplete, setBlurComplete] = (0, _react).useState(false);\n  const [showAltText, setShowAltText] = (0, _react).useState(false);\n  const qualityInt = getInt(quality);\n\n  if (true) {\n    if (!src) {\n      // React doesn't show the stack trace and there's\n      // no `src` to help identify which image, so we\n      // instead console.error(ref) during mount.\n      unoptimized = true;\n    } else {\n      if (fill) {\n        if (width) {\n          throw new Error(`Image with src \"${src}\" has both \"width\" and \"fill\" properties. Only one should be used.`);\n        }\n\n        if (height) {\n          throw new Error(`Image with src \"${src}\" has both \"height\" and \"fill\" properties. Only one should be used.`);\n        }\n\n        if ((style == null ? void 0 : style.position) && style.position !== 'absolute') {\n          throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.`);\n        }\n\n        if ((style == null ? void 0 : style.width) && style.width !== '100%') {\n          throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.`);\n        }\n\n        if ((style == null ? void 0 : style.height) && style.height !== '100%') {\n          throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.`);\n        }\n      } else {\n        if (typeof widthInt === 'undefined') {\n          throw new Error(`Image with src \"${src}\" is missing required \"width\" property.`);\n        } else if (isNaN(widthInt)) {\n          throw new Error(`Image with src \"${src}\" has invalid \"width\" property. Expected a numeric value in pixels but received \"${width}\".`);\n        }\n\n        if (typeof heightInt === 'undefined') {\n          throw new Error(`Image with src \"${src}\" is missing required \"height\" property.`);\n        } else if (isNaN(heightInt)) {\n          throw new Error(`Image with src \"${src}\" has invalid \"height\" property. Expected a numeric value in pixels but received \"${height}\".`);\n        }\n      }\n    }\n\n    if (!VALID_LOADING_VALUES.includes(loading)) {\n      throw new Error(`Image with src \"${src}\" has invalid \"loading\" property. Provided \"${loading}\" should be one of ${VALID_LOADING_VALUES.map(String).join(',')}.`);\n    }\n\n    if (priority && loading === 'lazy') {\n      throw new Error(`Image with src \"${src}\" has both \"priority\" and \"loading='lazy'\" properties. Only one should be used.`);\n    }\n\n    if (placeholder === 'blur') {\n      if (widthInt && heightInt && widthInt * heightInt < 1600) {\n        (0, _utils).warnOnce(`Image with src \"${src}\" is smaller than 40x40. Consider removing the \"placeholder='blur'\" property to improve performance.`);\n      }\n\n      if (!blurDataURL) {\n        const VALID_BLUR_EXT = ['jpeg', 'png', 'webp', 'avif'] // should match next-image-loader\n        ;\n        throw new Error(`Image with src \"${src}\" has \"placeholder='blur'\" property but is missing the \"blurDataURL\" property.\n          Possible solutions:\n            - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\n            - Change the \"src\" property to a static import with one of the supported file types: ${VALID_BLUR_EXT.join(',')}\n            - Remove the \"placeholder\" property, effectively no blur effect\n          Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url`);\n      }\n    }\n\n    if ('ref' in rest) {\n      (0, _utils).warnOnce(`Image with src \"${src}\" is using unsupported \"ref\" property. Consider using the \"onLoadingComplete\" property instead.`);\n    }\n\n    if (!unoptimized && loader !== defaultLoader) {\n      const urlStr = loader({\n        config,\n        src,\n        width: widthInt || 400,\n        quality: qualityInt || 75\n      });\n      let url;\n\n      try {\n        url = new URL(urlStr);\n      } catch (err) {}\n\n      if (urlStr === src || url && url.pathname === src && !url.search) {\n        (0, _utils).warnOnce(`Image with src \"${src}\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.` + `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width`);\n      }\n    }\n\n    if (false) {}\n  }\n\n  const imgStyle = Object.assign(fill ? {\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0\n  } : {}, showAltText ? {} : {\n    color: 'transparent'\n  }, style);\n  const blurStyle = placeholder === 'blur' && blurDataURL && !blurComplete ? {\n    backgroundSize: imgStyle.objectFit || 'cover',\n    backgroundPosition: imgStyle.objectPosition || '50% 50%',\n    backgroundRepeat: 'no-repeat',\n    backgroundImage: `url(\"data:image/svg+xml;charset=utf-8,${(0, _imageBlurSvg).getImageBlurSvg({\n      widthInt,\n      heightInt,\n      blurWidth,\n      blurHeight,\n      blurDataURL\n    })}\")`\n  } : {};\n\n  if (true) {\n    if (blurStyle.backgroundImage && (blurDataURL == null ? void 0 : blurDataURL.startsWith('/'))) {\n      // During `next dev`, we don't want to generate blur placeholders with webpack\n      // because it can delay starting the dev server. Instead, `next-image-loader.js`\n      // will inline a special url to lazily generate the blur placeholder at request time.\n      blurStyle.backgroundImage = `url(\"${blurDataURL}\")`;\n    }\n  }\n\n  const imgAttributes = generateImgAttrs({\n    config,\n    src,\n    unoptimized,\n    width: widthInt,\n    quality: qualityInt,\n    sizes,\n    loader\n  });\n  let srcString = src;\n\n  if (true) {\n    if (false) {}\n  }\n\n  let imageSrcSetPropName = 'imagesrcset';\n  let imageSizesPropName = 'imagesizes';\n\n  if (false) {}\n\n  const linkProps = {\n    // Note: imagesrcset and imagesizes are not in the link element type with react 17.\n    [imageSrcSetPropName]: imgAttributes.srcSet,\n    [imageSizesPropName]: imgAttributes.sizes,\n    crossOrigin: rest.crossOrigin\n  };\n  const onLoadingCompleteRef = (0, _react).useRef(onLoadingComplete);\n  (0, _react).useEffect(() => {\n    onLoadingCompleteRef.current = onLoadingComplete;\n  }, [onLoadingComplete]);\n\n  const imgElementArgs = _extends({\n    isLazy,\n    imgAttributes,\n    heightInt,\n    widthInt,\n    qualityInt,\n    className,\n    imgStyle,\n    blurStyle,\n    loading,\n    config,\n    fill,\n    unoptimized,\n    placeholder,\n    loader,\n    srcString,\n    onLoadingCompleteRef,\n    setBlurComplete,\n    setShowAltText\n  }, rest);\n\n  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(ImageElement, Object.assign({}, imgElementArgs)), priority ? // Note how we omit the `href` attribute, as it would only be relevant\n  // for browsers that do not support `imagesrcset`, and in those cases\n  // it would likely cause the incorrect image to be preloaded.\n  //\n  // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n\n  /*#__PURE__*/\n  _react.default.createElement(_head.default, null, /*#__PURE__*/_react.default.createElement(\"link\", Object.assign({\n    key: '__nimg-' + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes,\n    rel: \"preload\",\n    as: \"image\",\n    href: imgAttributes.srcSet ? undefined : imgAttributes.src\n  }, linkProps))) : null);\n}\n\n'client';\nconst configEnv = {\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384,512],\"path\":\"/_next/image\",\"loader\":\"default\",\"dangerouslyAllowSVG\":false,\"unoptimized\":false,\"domains\":[\"localhost\",\"aboutinsurances.vercel.app\"],\"remotePatterns\":[]};\nconst allImgs = new Map();\nlet perfObserver;\n\nif (true) {\n  global.__NEXT_IMAGE_IMPORTED = true;\n}\n\nconst VALID_LOADING_VALUES = ['lazy', 'eager', undefined];\n\nfunction isStaticRequire(src) {\n  return src.default !== undefined;\n}\n\nfunction isStaticImageData(src) {\n  return src.src !== undefined;\n}\n\nfunction isStaticImport(src) {\n  return typeof src === 'object' && (isStaticRequire(src) || isStaticImageData(src));\n}\n\nfunction getWidths({\n  deviceSizes,\n  allSizes\n}, width, sizes) {\n  if (sizes) {\n    // Find all the \"vw\" percent sizes used in the sizes prop\n    const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g;\n    const percentSizes = [];\n\n    for (let match; match = viewportWidthRe.exec(sizes); match) {\n      percentSizes.push(parseInt(match[2]));\n    }\n\n    if (percentSizes.length) {\n      const smallestRatio = Math.min(...percentSizes) * 0.01;\n      return {\n        widths: allSizes.filter(s => s >= deviceSizes[0] * smallestRatio),\n        kind: 'w'\n      };\n    }\n\n    return {\n      widths: allSizes,\n      kind: 'w'\n    };\n  }\n\n  if (typeof width !== 'number') {\n    return {\n      widths: deviceSizes,\n      kind: 'w'\n    };\n  }\n\n  const widths = [...new Set( // > This means that most OLED screens that say they are 3x resolution,\n  // > are actually 3x in the green color, but only 1.5x in the red and\n  // > blue colors. Showing a 3x resolution image in the app vs a 2x\n  // > resolution image will be visually the same, though the 3x image\n  // > takes significantly more data. Even true 3x resolution screens are\n  // > wasteful as the human eye cannot see that level of detail without\n  // > something like a magnifying glass.\n  // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n  [width, width * 2\n  /*, width * 3*/\n  ].map(w => allSizes.find(p => p >= w) || allSizes[allSizes.length - 1]))];\n  return {\n    widths,\n    kind: 'x'\n  };\n}\n\nfunction generateImgAttrs({\n  config,\n  src,\n  unoptimized,\n  width,\n  quality,\n  sizes,\n  loader\n}) {\n  if (unoptimized) {\n    return {\n      src,\n      srcSet: undefined,\n      sizes: undefined\n    };\n  }\n\n  const {\n    widths,\n    kind\n  } = getWidths(config, width, sizes);\n  const last = widths.length - 1;\n  return {\n    sizes: !sizes && kind === 'w' ? '100vw' : sizes,\n    srcSet: widths.map((w, i) => `${loader({\n      config,\n      src,\n      quality,\n      width: w\n    })} ${kind === 'w' ? w : i + 1}${kind}`).join(', '),\n    // It's intended to keep `src` the last attribute because React updates\n    // attributes in order. If we keep `src` the first one, Safari will\n    // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n    // updated by React. That causes multiple unnecessary requests if `srcSet`\n    // and `sizes` are defined.\n    // This bug cannot be reproduced in Chrome or Firefox.\n    src: loader({\n      config,\n      src,\n      quality,\n      width: widths[last]\n    })\n  };\n}\n\nfunction getInt(x) {\n  if (typeof x === 'number' || typeof x === 'undefined') {\n    return x;\n  }\n\n  if (typeof x === 'string' && /^[0-9]+$/.test(x)) {\n    return parseInt(x, 10);\n  }\n\n  return NaN;\n} // See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\n\n\nfunction handleLoading(img, src, placeholder, onLoadingCompleteRef, setBlurComplete) {\n  if (!img || img['data-loaded-src'] === src) {\n    return;\n  }\n\n  img['data-loaded-src'] = src;\n  const p = 'decode' in img ? img.decode() : Promise.resolve();\n  p.catch(() => {}).then(() => {\n    if (!img.parentNode) {\n      // Exit early in case of race condition:\n      // - onload() is called\n      // - decode() is called but incomplete\n      // - unmount is called\n      // - decode() completes\n      return;\n    }\n\n    if (placeholder === 'blur') {\n      setBlurComplete(true);\n    }\n\n    if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {\n      onLoadingCompleteRef.current(img);\n    }\n\n    if (true) {\n      if (img.getAttribute('data-nimg') === 'future-fill') {\n        if (!img.getAttribute('sizes') || img.getAttribute('sizes') === '100vw') {\n          let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;\n\n          if (widthViewportRatio < 0.6) {\n            (0, _utils).warnOnce(`Image with src \"${src}\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/future/image#sizes`);\n          }\n        }\n\n        if (img.parentElement) {\n          const {\n            position\n          } = window.getComputedStyle(img.parentElement);\n          const valid = ['absolute', 'fixed', 'relative'];\n\n          if (!valid.includes(position)) {\n            (0, _utils).warnOnce(`Image with src \"${src}\" has \"fill\" and parent element with invalid \"position\". Provided \"${position}\" should be one of ${valid.map(String).join(',')}.`);\n          }\n        }\n\n        if (img.height === 0) {\n          (0, _utils).warnOnce(`Image with src \"${src}\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.`);\n        }\n      }\n\n      const heightModified = img.height.toString() !== img.getAttribute('height');\n      const widthModified = img.width.toString() !== img.getAttribute('width');\n\n      if (heightModified && !widthModified || !heightModified && widthModified) {\n        (0, _utils).warnOnce(`Image with src \"${src}\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles 'width: \"auto\"' or 'height: \"auto\"' to maintain the aspect ratio.`);\n      }\n    }\n  });\n}\n\nconst ImageElement = _param => {\n  var {\n    imgAttributes,\n    heightInt,\n    widthInt,\n    qualityInt,\n    className,\n    imgStyle,\n    blurStyle,\n    isLazy,\n    fill,\n    placeholder,\n    loading,\n    srcString,\n    config,\n    unoptimized,\n    loader,\n    onLoadingCompleteRef,\n    setBlurComplete,\n    setShowAltText,\n    onLoad,\n    onError\n  } = _param,\n      rest = _object_without_properties_loose(_param, [\"imgAttributes\", \"heightInt\", \"widthInt\", \"qualityInt\", \"className\", \"imgStyle\", \"blurStyle\", \"isLazy\", \"fill\", \"placeholder\", \"loading\", \"srcString\", \"config\", \"unoptimized\", \"loader\", \"onLoadingCompleteRef\", \"setBlurComplete\", \"setShowAltText\", \"onLoad\", \"onError\"]);\n\n  loading = isLazy ? 'lazy' : loading;\n  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"img\", Object.assign({}, rest, imgAttributes, {\n    width: widthInt,\n    height: heightInt,\n    decoding: \"async\",\n    \"data-nimg\": `future${fill ? '-fill' : ''}`,\n    className: className,\n    // @ts-ignore - TODO: upgrade to `@types/react@17`\n    loading: loading,\n    style: _extends({}, imgStyle, blurStyle),\n    ref: (0, _react).useCallback(img => {\n      if (!img) {\n        return;\n      }\n\n      if (onError) {\n        // If the image has an error before react hydrates, then the error is lost.\n        // The workaround is to wait until the image is mounted which is after hydration,\n        // then we set the src again to trigger the error handler (if there was an error).\n        // eslint-disable-next-line no-self-assign\n        img.src = img.src;\n      }\n\n      if (true) {\n        if (!srcString) {\n          console.error(`Image is missing required \"src\" property:`, img);\n        }\n\n        if (img.getAttribute('objectFit') || img.getAttribute('objectfit')) {\n          console.error(`Image has unknown prop \"objectFit\". Did you mean to use the \"style\" prop instead?`, img);\n        }\n\n        if (img.getAttribute('objectPosition') || img.getAttribute('objectposition')) {\n          console.error(`Image has unknown prop \"objectPosition\". Did you mean to use the \"style\" prop instead?`, img);\n        }\n\n        if (img.getAttribute('alt') === null) {\n          console.error(`Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.`);\n        }\n      }\n\n      if (img.complete) {\n        handleLoading(img, srcString, placeholder, onLoadingCompleteRef, setBlurComplete);\n      }\n    }, [srcString, placeholder, onLoadingCompleteRef, setBlurComplete, onError]),\n    onLoad: event => {\n      const img = event.currentTarget;\n      handleLoading(img, srcString, placeholder, onLoadingCompleteRef, setBlurComplete);\n\n      if (onLoad) {\n        onLoad(event);\n      }\n    },\n    onError: event => {\n      // if the real image fails to load, this will ensure \"alt\" is visible\n      setShowAltText(true);\n\n      if (placeholder === 'blur') {\n        // If the real image fails to load, this will still remove the placeholder.\n        setBlurComplete(true);\n      }\n\n      if (onError) {\n        onError(event);\n      }\n    }\n  })));\n};\n\nfunction defaultLoader({\n  config,\n  src,\n  width,\n  quality\n}) {\n  if (true) {\n    const missingValues = []; // these should always be provided but make sure they are\n\n    if (!src) missingValues.push('src');\n    if (!width) missingValues.push('width');\n\n    if (missingValues.length > 0) {\n      throw new Error(`Next Image Optimization requires ${missingValues.join(', ')} to be provided. Make sure you pass them as props to the \\`next/image\\` component. Received: ${JSON.stringify({\n        src,\n        width,\n        quality\n      })}`);\n    }\n\n    if (src.startsWith('//')) {\n      throw new Error(`Failed to parse src \"${src}\" on \\`next/image\\`, protocol-relative URL (//) must be changed to an absolute URL (http:// or https://)`);\n    }\n\n    if (!src.startsWith('/') && (config.domains || config.remotePatterns)) {\n      let parsedSrc;\n\n      try {\n        parsedSrc = new URL(src);\n      } catch (err) {\n        console.error(err);\n        throw new Error(`Failed to parse src \"${src}\" on \\`next/image\\`, if using relative image it must start with a leading slash \"/\" or be an absolute URL (http:// or https://)`);\n      }\n\n      if (true) {\n        // We use dynamic require because this should only error in development\n        const {\n          hasMatch\n        } = __webpack_require__(/*! ../../shared/lib/match-remote-pattern */ \"../../shared/lib/match-remote-pattern\");\n\n        if (!hasMatch(config.domains, config.remotePatterns, parsedSrc)) {\n          throw new Error(`Invalid src prop (${src}) on \\`next/image\\`, hostname \"${parsedSrc.hostname}\" is not configured under images in your \\`next.config.js\\`\\n` + `See more info: https://nextjs.org/docs/messages/next-image-unconfigured-host`);\n        }\n      }\n    }\n  }\n\n  if (src.endsWith('.svg') && !config.dangerouslyAllowSVG) {\n    // Special case to make svg serve as-is to avoid proxying\n    // through the built-in Image Optimization API.\n    return src;\n  }\n\n  return `${config.path}?url=${encodeURIComponent(src)}&w=${width}&q=${quality || 75}`;\n}\n\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9mdXR1cmUvaW1hZ2UuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQUEsOENBQTZDO0VBQ3pDRyxLQUFLLEVBQUU7QUFEa0MsQ0FBN0M7QUFHQUQsa0JBQUEsR0FBa0JHLEtBQWxCOztBQUNBLElBQUlDLFFBQVEsR0FBR0MsbUhBQWY7O0FBQ0EsSUFBSUMsd0JBQXdCLEdBQUdELG1KQUEvQjs7QUFDQSxJQUFJRSx5QkFBeUIsR0FBR0YscUpBQWhDOztBQUNBLElBQUlHLGdDQUFnQyxHQUFHSCxtS0FBdkM7O0FBQ0EsSUFBSUksTUFBTSxHQUFHRix5QkFBeUIsQ0FBQ0YsbUJBQU8sQ0FBQyxvQkFBRCxDQUFSLENBQXRDOztBQUNBLElBQUlLLEtBQUssR0FBR0osd0JBQXdCLENBQUNELG1CQUFPLENBQUMsaURBQUQsQ0FBUixDQUFwQzs7QUFDQSxJQUFJTSxhQUFhLEdBQUdOLG1CQUFPLENBQUMsd0VBQUQsQ0FBM0I7O0FBQ0EsSUFBSU8sWUFBWSxHQUFHUCxtQkFBTyxDQUFDLG9FQUFELENBQTFCOztBQUNBLElBQUlRLG1CQUFtQixHQUFHUixtQkFBTyxDQUFDLG9GQUFELENBQWpDOztBQUNBLElBQUlTLE1BQU0sR0FBR1QsbUJBQU8sQ0FBQyxzREFBRCxDQUFwQjs7QUFDQSxTQUFTRixLQUFULENBQWVZLE1BQWYsRUFBdUI7RUFDbkIsSUFBSTtJQUFFQyxHQUFGO0lBQVFDLEtBQVI7SUFBZ0JDLFdBQVcsR0FBRSxLQUE3QjtJQUFxQ0MsUUFBUSxHQUFFLEtBQS9DO0lBQXVEQyxPQUF2RDtJQUFpRUMsU0FBakU7SUFBNkVDLE9BQTdFO0lBQXVGQyxLQUF2RjtJQUErRkMsTUFBL0Y7SUFBd0dDLElBQXhHO0lBQStHQyxLQUEvRztJQUF1SEMsaUJBQXZIO0lBQTJJQyxXQUFXLEdBQUUsT0FBeEo7SUFBa0tDO0VBQWxLLElBQW1MZCxNQUF2TDtFQUFBLElBQStMZSxHQUFHLEdBQUd0QixnQ0FBZ0Ms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TixPQUFQLEdBQWlCQSxPQUFPLENBQUNFLE9BQXpCO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wd2EtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2Z1dHVyZS9pbWFnZS5qcz84ZjA1Il0sInNvdXJjZXNDb250ZW50IjpbIlwiY2xpZW50XCI7XG5cInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IEltYWdlO1xudmFyIF9leHRlbmRzID0gcmVxdWlyZShcIkBzd2MvaGVscGVycy9saWIvX2V4dGVuZHMuanNcIikuZGVmYXVsdDtcbnZhciBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQgPSByZXF1aXJlKFwiQHN3Yy9oZWxwZXJzL2xpYi9faW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQuanNcIikuZGVmYXVsdDtcbnZhciBfaW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkID0gcmVxdWlyZShcIkBzd2MvaGVscGVycy9saWIvX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZC5qc1wiKS5kZWZhdWx0O1xudmFyIF9vYmplY3Rfd2l0aG91dF9wcm9wZXJ0aWVzX2xvb3NlID0gcmVxdWlyZShcIkBzd2MvaGVscGVycy9saWIvX29iamVjdF93aXRob3V0X3Byb3BlcnRpZXNfbG9vc2UuanNcIikuZGVmYXVsdDtcbnZhciBfcmVhY3QgPSBfaW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgX2hlYWQgPSBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQocmVxdWlyZShcIi4uLy4uL3NoYXJlZC9saWIvaGVhZFwiKSk7XG52YXIgX2ltYWdlQmx1clN2ZyA9IHJlcXVpcmUoXCIuLi8uLi9zaGFyZWQvbGliL2ltYWdlLWJsdXItc3ZnXCIpO1xudmFyIF9pbWFnZUNvbmZpZyA9IHJlcXVpcmUoXCIuLi8uLi9zaGFyZWQvbGliL2ltYWdlLWNvbmZpZ1wiKTtcbnZhciBfaW1hZ2VDb25maWdDb250ZXh0ID0gcmVxdWlyZShcIi4uLy4uL3NoYXJlZC9saWIvaW1hZ2UtY29uZmlnLWNvbnRleHRcIik7XG52YXIgX3V0aWxzID0gcmVxdWlyZShcIi4uLy4uL3NoYXJlZC9saWIvdXRpbHNcIik7XG5mdW5jdGlvbiBJbWFnZShfcGFyYW0pIHtcbiAgICB2YXIgeyBzcmMgLCBzaXplcyAsIHVub3B0aW1pemVkID1mYWxzZSAsIHByaW9yaXR5ID1mYWxzZSAsIGxvYWRpbmcgLCBjbGFzc05hbWUgLCBxdWFsaXR5ICwgd2lkdGggLCBoZWlnaHQgLCBmaWxsICwgc3R5bGUgLCBvbkxvYWRpbmdDb21wbGV0ZSAsIHBsYWNlaG9sZGVyID0nZW1wdHknICwgYmx1ckRhdGFVUkwgIH0gPSBfcGFyYW0sIGFsbCA9IF9vYmplY3Rfd2l0aG91dF9wcm9wZXJ0aWVzX2xvb3NlKF9wYXJhbSwgW1xuICAgICAgICBcInNyY1wiLFxuICAgICAgICBcInNpemVzXCIsXG4gICAgICAgIFwidW5vcHRpbWl6ZWRcIixcbiAgICAgICAgXCJwcmlvcml0eVwiLFxuICAgICAgICBcImxvYWRpbmdcIixcbiAgICAgICAgXCJjbGFzc05hbWVcIixcbiAgICAgICAgXCJxdWFsaXR5XCIsXG4gICAgICAgIFwid2lkdGhcIixcbiAgICAgICAgXCJoZWlnaHRcIixcbiAgICAgICAgXCJmaWxsXCIsXG4gICAgICAgIFwic3R5bGVcIixcbiAgICAgICAgXCJvbkxvYWRpbmdDb21wbGV0ZVwiLFxuICAgICAgICBcInBsYWNlaG9sZGVyXCIsXG4gICAgICAgIFwiYmx1ckRhdGFVUkxcIlxuICAgIF0pO1xuICAgIGNvbnN0IGNvbmZpZ0NvbnRleHQgPSAoMCwgX3JlYWN0KS51c2VDb250ZXh0KF9pbWFnZUNvbmZpZ0NvbnRleHQuSW1hZ2VDb25maWdDb250ZXh0KTtcbiAgICBjb25zdCBjb25maWcgPSAoMCwgX3JlYWN0KS51c2VNZW1vKCgpPT57XG4gICAgICAgIGNvbnN0IGMgPSBjb25maWdFbnYgfHwgY29uZmlnQ29udGV4dCB8fCBfaW1hZ2VDb25maWcuaW1hZ2VDb25maWdEZWZhdWx0O1xuICAgICAgICBjb25zdCBhbGxTaXplcyA9IFtcbiAgICAgICAgICAgIC4uLmMuZGV2aWNlU2l6ZXMsXG4gICAgICAgICAgICAuLi5jLmltYWdlU2l6ZXNcbiAgICAgICAgXS5zb3J0KChhLCBiKT0+YSAtIGIpO1xuICAgICAgICBjb25zdCBkZXZpY2VTaXplcyA9IGMuZGV2aWNlU2l6ZXMuc29ydCgoYSwgYik9PmEgLSBiKTtcbiAgICAgICAgcmV0dXJuIF9leHRlbmRzKHt9LCBjLCB7XG4gICAgICAgICAgICBhbGxTaXplcyxcbiAgICAgICAgICAgIGRldmljZVNpemVzXG4gICAgICAgIH0pO1xuICAgIH0sIFtcbiAgICAgICAgY29uZmlnQ29udGV4dFxuICAgIF0pO1xuICAgIGxldCByZXN0ID0gYWxsO1xuICAgIGxldCBsb2FkZXIgPSBkZWZhdWx0TG9hZGVyO1xuICAgIGlmICgnbG9hZGVyJyBpbiByZXN0KSB7XG4gICAgICAgIGlmIChyZXN0LmxvYWRlcikge1xuICAgICAgICAgICAgY29uc3QgY3VzdG9tSW1hZ2VMb2FkZXIgPSByZXN0LmxvYWRlcjtcbiAgICAgICAgICAgIHZhciBfdG1wO1xuICAgICAgICAgICAgX3RtcCA9IChvYmopPT57XG4gICAgICAgICAgICAgICAgY29uc3QgeyBjb25maWc6IF8gIH0gPSBvYmosIG9wdHMgPSBfb2JqZWN0X3dpdGhvdXRfcHJvcGVydGllc19sb29zZShvYmosIFtcbiAgICAgICAgICAgICAgICAgICAgXCJjb25maWdcIlxuICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgICAgIC8vIFRoZSBjb25maWcgb2JqZWN0IGlzIGludGVybmFsIG9ubHkgc28gd2UgbXVzdFxuICAgICAgICAgICAgICAgIC8vIG5vdCBwYXNzIGl0IHRvIHRoZSB1c2VyLWRlZmluZWQgbG9hZGVyKClcbiAgICAgICAgICAgICAgICByZXR1cm4gY3VzdG9tSW1hZ2VMb2FkZXIob3B0cyk7XG4gICAgICAgICAgICB9LCBsb2FkZXIgPSBfdG1wLCBfdG1wO1xuICAgICAgICB9XG4gICAgICAgIC8vIFJlbW92ZSBwcm9wZXJ0eSBzbyBpdCdzIG5vdCBzcHJlYWQgb24gPGltZz5cbiAgICAgICAgZGVsZXRlIHJlc3QubG9hZGVyO1xuICAgIH1cbiAgICBsZXQgc3RhdGljU3JjID0gJyc7XG4gICAgbGV0IHdpZHRoSW50ID0gZ2V0SW50KHdpZHRoKTtcbiAgICBsZXQgaGVpZ2h0SW50ID0gZ2V0SW50KGhlaWdodCk7XG4gICAgbGV0IGJsdXJXaWR0aDtcbiAgICBsZXQgYmx1ckhlaWdodDtcbiAgICBpZiAoaXNTdGF0aWNJbXBvcnQoc3JjKSkge1xuICAgICAgICBjb25zdCBzdGF0aWNJbWFnZURhdGEgPSBpc1N0YXRpY1JlcXVpcmUoc3JjKSA/IHNyYy5kZWZhdWx0IDogc3JjO1xuICAgICAgICBpZiAoIXN0YXRpY0ltYWdlRGF0YS5zcmMpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQW4gb2JqZWN0IHNob3VsZCBvbmx5IGJlIHBhc3NlZCB0byB0aGUgaW1hZ2UgY29tcG9uZW50IHNyYyBwYXJhbWV0ZXIgaWYgaXQgY29tZXMgZnJvbSBhIHN0YXRpYyBpbWFnZSBpbXBvcnQuIEl0IG11c3QgaW5jbHVkZSBzcmMuIFJlY2VpdmVkICR7SlNPTi5zdHJpbmdpZnkoc3RhdGljSW1hZ2VEYXRhKX1gKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXN0YXRpY0ltYWdlRGF0YS5oZWlnaHQgfHwgIXN0YXRpY0ltYWdlRGF0YS53aWR0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBBbiBvYmplY3Qgc2hvdWxkIG9ubHkgYmUgcGFzc2VkIHRvIHRoZSBpbWFnZSBjb21wb25lbnQgc3JjIHBhcmFtZXRlciBpZiBpdCBjb21lcyBmcm9tIGEgc3RhdGljIGltYWdlIGltcG9ydC4gSXQgbXVzdCBpbmNsdWRlIGhlaWdodCBhbmQgd2lkdGguIFJlY2VpdmVkICR7SlNPTi5zdHJpbmdpZnkoc3RhdGljSW1hZ2VEYXRhKX1gKTtcbiAgICAgICAgfVxuICAgICAgICBibHVyV2lkdGggPSBzdGF0aWNJbWFnZURhdGEuYmx1cldpZHRoO1xuICAgICAgICBibHVySGVpZ2h0ID0gc3RhdGljSW1hZ2VEYXRhLmJsdXJIZWlnaHQ7XG4gICAgICAgIGJsdXJEYXRhVVJMID0gYmx1ckRhdGFVUkwgfHwgc3RhdGljSW1hZ2VEYXRhLmJsdXJEYXRhVVJMO1xuICAgICAgICBzdGF0aWNTcmMgPSBzdGF0aWNJbWFnZURhdGEuc3JjO1xuICAgICAgICBpZiAoIWZpbGwpIHtcbiAgICAgICAgICAgIGlmICghd2lkdGhJbnQgJiYgIWhlaWdodEludCkge1xuICAgICAgICAgICAgICAgIHdpZHRoSW50ID0gc3RhdGljSW1hZ2VEYXRhLndpZHRoO1xuICAgICAgICAgICAgICAgIGhlaWdodEludCA9IHN0YXRpY0ltYWdlRGF0YS5oZWlnaHQ7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHdpZHRoSW50ICYmICFoZWlnaHRJbnQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCByYXRpbyA9IHdpZHRoSW50IC8gc3RhdGljSW1hZ2VEYXRhLndpZHRoO1xuICAgICAgICAgICAgICAgIGhlaWdodEludCA9IE1hdGgucm91bmQoc3RhdGljSW1hZ2VEYXRhLmhlaWdodCAqIHJhdGlvKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIXdpZHRoSW50ICYmIGhlaWdodEludCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJhdGlvID0gaGVpZ2h0SW50IC8gc3RhdGljSW1hZ2VEYXRhLmhlaWdodDtcbiAgICAgICAgICAgICAgICB3aWR0aEludCA9IE1hdGgucm91bmQoc3RhdGljSW1hZ2VEYXRhLndpZHRoICogcmF0aW8pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHNyYyA9IHR5cGVvZiBzcmMgPT09ICdzdHJpbmcnID8gc3JjIDogc3RhdGljU3JjO1xuICAgIGxldCBpc0xhenkgPSAhcHJpb3JpdHkgJiYgKGxvYWRpbmcgPT09ICdsYXp5JyB8fCB0eXBlb2YgbG9hZGluZyA9PT0gJ3VuZGVmaW5lZCcpO1xuICAgIGlmIChzcmMuc3RhcnRzV2l0aCgnZGF0YTonKSB8fCBzcmMuc3RhcnRzV2l0aCgnYmxvYjonKSkge1xuICAgICAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVFRQL0Jhc2ljc19vZl9IVFRQL0RhdGFfVVJJc1xuICAgICAgICB1bm9wdGltaXplZCA9IHRydWU7XG4gICAgICAgIGlzTGF6eSA9IGZhbHNlO1xuICAgIH1cbiAgICBpZiAoY29uZmlnLnVub3B0aW1pemVkKSB7XG4gICAgICAgIHVub3B0aW1pemVkID0gdHJ1ZTtcbiAgICB9XG4gICAgY29uc3QgW2JsdXJDb21wbGV0ZSwgc2V0Qmx1ckNvbXBsZXRlXSA9ICgwLCBfcmVhY3QpLnVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCBbc2hvd0FsdFRleHQsIHNldFNob3dBbHRUZXh0XSA9ICgwLCBfcmVhY3QpLnVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCBxdWFsaXR5SW50ID0gZ2V0SW50KHF1YWxpdHkpO1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGlmICghc3JjKSB7XG4gICAgICAgICAgICAvLyBSZWFjdCBkb2Vzbid0IHNob3cgdGhlIHN0YWNrIHRyYWNlIGFuZCB0aGVyZSdzXG4gICAgICAgICAgICAvLyBubyBgc3JjYCB0byBoZWxwIGlkZW50aWZ5IHdoaWNoIGltYWdlLCBzbyB3ZVxuICAgICAgICAgICAgLy8gaW5zdGVhZCBjb25zb2xlLmVycm9yKHJlZikgZHVyaW5nIG1vdW50LlxuICAgICAgICAgICAgdW5vcHRpbWl6ZWQgPSB0cnVlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKGZpbGwpIHtcbiAgICAgICAgICAgICAgICBpZiAod2lkdGgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbWFnZSB3aXRoIHNyYyBcIiR7c3JjfVwiIGhhcyBib3RoIFwid2lkdGhcIiBhbmQgXCJmaWxsXCIgcHJvcGVydGllcy4gT25seSBvbmUgc2hvdWxkIGJlIHVzZWQuYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChoZWlnaHQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbWFnZSB3aXRoIHNyYyBcIiR7c3JjfVwiIGhhcyBib3RoIFwiaGVpZ2h0XCIgYW5kIFwiZmlsbFwiIHByb3BlcnRpZXMuIE9ubHkgb25lIHNob3VsZCBiZSB1c2VkLmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoKHN0eWxlID09IG51bGwgPyB2b2lkIDAgOiBzdHlsZS5wb3NpdGlvbikgJiYgc3R5bGUucG9zaXRpb24gIT09ICdhYnNvbHV0ZScpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbWFnZSB3aXRoIHNyYyBcIiR7c3JjfVwiIGhhcyBib3RoIFwiZmlsbFwiIGFuZCBcInN0eWxlLnBvc2l0aW9uXCIgcHJvcGVydGllcy4gSW1hZ2VzIHdpdGggXCJmaWxsXCIgYWx3YXlzIHVzZSBwb3NpdGlvbiBhYnNvbHV0ZSAtIGl0IGNhbm5vdCBiZSBtb2RpZmllZC5gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKChzdHlsZSA9PSBudWxsID8gdm9pZCAwIDogc3R5bGUud2lkdGgpICYmIHN0eWxlLndpZHRoICE9PSAnMTAwJScpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbWFnZSB3aXRoIHNyYyBcIiR7c3JjfVwiIGhhcyBib3RoIFwiZmlsbFwiIGFuZCBcInN0eWxlLndpZHRoXCIgcHJvcGVydGllcy4gSW1hZ2VzIHdpdGggXCJmaWxsXCIgYWx3YXlzIHVzZSB3aWR0aCAxMDAlIC0gaXQgY2Fubm90IGJlIG1vZGlmaWVkLmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoKHN0eWxlID09IG51bGwgPyB2b2lkIDAgOiBzdHlsZS5oZWlnaHQpICYmIHN0eWxlLmhlaWdodCAhPT0gJzEwMCUnKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW1hZ2Ugd2l0aCBzcmMgXCIke3NyY31cIiBoYXMgYm90aCBcImZpbGxcIiBhbmQgXCJzdHlsZS5oZWlnaHRcIiBwcm9wZXJ0aWVzLiBJbWFnZXMgd2l0aCBcImZpbGxcIiBhbHdheXMgdXNlIGhlaWdodCAxMDAlIC0gaXQgY2Fubm90IGJlIG1vZGlmaWVkLmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB3aWR0aEludCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbWFnZSB3aXRoIHNyYyBcIiR7c3JjfVwiIGlzIG1pc3NpbmcgcmVxdWlyZWQgXCJ3aWR0aFwiIHByb3BlcnR5LmApO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNOYU4od2lkdGhJbnQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW1hZ2Ugd2l0aCBzcmMgXCIke3NyY31cIiBoYXMgaW52YWxpZCBcIndpZHRoXCIgcHJvcGVydHkuIEV4cGVjdGVkIGEgbnVtZXJpYyB2YWx1ZSBpbiBwaXhlbHMgYnV0IHJlY2VpdmVkIFwiJHt3aWR0aH1cIi5gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBoZWlnaHRJbnQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW1hZ2Ugd2l0aCBzcmMgXCIke3NyY31cIiBpcyBtaXNzaW5nIHJlcXVpcmVkIFwiaGVpZ2h0XCIgcHJvcGVydHkuYCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpc05hTihoZWlnaHRJbnQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW1hZ2Ugd2l0aCBzcmMgXCIke3NyY31cIiBoYXMgaW52YWxpZCBcImhlaWdodFwiIHByb3BlcnR5LiBFeHBlY3RlZCBhIG51bWVyaWMgdmFsdWUgaW4gcGl4ZWxzIGJ1dCByZWNlaXZlZCBcIiR7aGVpZ2h0fVwiLmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoIVZBTElEX0xPQURJTkdfVkFMVUVTLmluY2x1ZGVzKGxvYWRpbmcpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEltYWdlIHdpdGggc3JjIFwiJHtzcmN9XCIgaGFzIGludmFsaWQgXCJsb2FkaW5nXCIgcHJvcGVydHkuIFByb3ZpZGVkIFwiJHtsb2FkaW5nfVwiIHNob3VsZCBiZSBvbmUgb2YgJHtWQUxJRF9MT0FESU5HX1ZBTFVFUy5tYXAoU3RyaW5nKS5qb2luKCcsJyl9LmApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcmlvcml0eSAmJiBsb2FkaW5nID09PSAnbGF6eScpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW1hZ2Ugd2l0aCBzcmMgXCIke3NyY31cIiBoYXMgYm90aCBcInByaW9yaXR5XCIgYW5kIFwibG9hZGluZz0nbGF6eSdcIiBwcm9wZXJ0aWVzLiBPbmx5IG9uZSBzaG91bGQgYmUgdXNlZC5gKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocGxhY2Vob2xkZXIgPT09ICdibHVyJykge1xuICAgICAgICAgICAgaWYgKHdpZHRoSW50ICYmIGhlaWdodEludCAmJiB3aWR0aEludCAqIGhlaWdodEludCA8IDE2MDApIHtcbiAgICAgICAgICAgICAgICAoMCwgX3V0aWxzKS53YXJuT25jZShgSW1hZ2Ugd2l0aCBzcmMgXCIke3NyY31cIiBpcyBzbWFsbGVyIHRoYW4gNDB4NDAuIENvbnNpZGVyIHJlbW92aW5nIHRoZSBcInBsYWNlaG9sZGVyPSdibHVyJ1wiIHByb3BlcnR5IHRvIGltcHJvdmUgcGVyZm9ybWFuY2UuYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWJsdXJEYXRhVVJMKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgVkFMSURfQkxVUl9FWFQgPSBbXG4gICAgICAgICAgICAgICAgICAgICdqcGVnJyxcbiAgICAgICAgICAgICAgICAgICAgJ3BuZycsXG4gICAgICAgICAgICAgICAgICAgICd3ZWJwJyxcbiAgICAgICAgICAgICAgICAgICAgJ2F2aWYnXG4gICAgICAgICAgICAgICAgXSAvLyBzaG91bGQgbWF0Y2ggbmV4dC1pbWFnZS1sb2FkZXJcbiAgICAgICAgICAgICAgICA7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbWFnZSB3aXRoIHNyYyBcIiR7c3JjfVwiIGhhcyBcInBsYWNlaG9sZGVyPSdibHVyJ1wiIHByb3BlcnR5IGJ1dCBpcyBtaXNzaW5nIHRoZSBcImJsdXJEYXRhVVJMXCIgcHJvcGVydHkuXG4gICAgICAgICAgUG9zc2libGUgc29sdXRpb25zOlxuICAgICAgICAgICAgLSBBZGQgYSBcImJsdXJEYXRhVVJMXCIgcHJvcGVydHksIHRoZSBjb250ZW50cyBzaG91bGQgYmUgYSBzbWFsbCBEYXRhIFVSTCB0byByZXByZXNlbnQgdGhlIGltYWdlXG4gICAgICAgICAgICAtIENoYW5nZSB0aGUgXCJzcmNcIiBwcm9wZXJ0eSB0byBhIHN0YXRpYyBpbXBvcnQgd2l0aCBvbmUgb2YgdGhlIHN1cHBvcnRlZCBmaWxlIHR5cGVzOiAke1ZBTElEX0JMVVJfRVhULmpvaW4oJywnKX1cbiAgICAgICAgICAgIC0gUmVtb3ZlIHRoZSBcInBsYWNlaG9sZGVyXCIgcHJvcGVydHksIGVmZmVjdGl2ZWx5IG5vIGJsdXIgZWZmZWN0XG4gICAgICAgICAgUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9wbGFjZWhvbGRlci1ibHVyLWRhdGEtdXJsYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCdyZWYnIGluIHJlc3QpIHtcbiAgICAgICAgICAgICgwLCBfdXRpbHMpLndhcm5PbmNlKGBJbWFnZSB3aXRoIHNyYyBcIiR7c3JjfVwiIGlzIHVzaW5nIHVuc3VwcG9ydGVkIFwicmVmXCIgcHJvcGVydHkuIENvbnNpZGVyIHVzaW5nIHRoZSBcIm9uTG9hZGluZ0NvbXBsZXRlXCIgcHJvcGVydHkgaW5zdGVhZC5gKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXVub3B0aW1pemVkICYmIGxvYWRlciAhPT0gZGVmYXVsdExvYWRlcikge1xuICAgICAgICAgICAgY29uc3QgdXJsU3RyID0gbG9hZGVyKHtcbiAgICAgICAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgICAgICAgc3JjLFxuICAgICAgICAgICAgICAgIHdpZHRoOiB3aWR0aEludCB8fCA0MDAsXG4gICAgICAgICAgICAgICAgcXVhbGl0eTogcXVhbGl0eUludCB8fCA3NVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBsZXQgdXJsO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB1cmwgPSBuZXcgVVJMKHVybFN0cik7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnIpIHt9XG4gICAgICAgICAgICBpZiAodXJsU3RyID09PSBzcmMgfHwgdXJsICYmIHVybC5wYXRobmFtZSA9PT0gc3JjICYmICF1cmwuc2VhcmNoKSB7XG4gICAgICAgICAgICAgICAgKDAsIF91dGlscykud2Fybk9uY2UoYEltYWdlIHdpdGggc3JjIFwiJHtzcmN9XCIgaGFzIGEgXCJsb2FkZXJcIiBwcm9wZXJ0eSB0aGF0IGRvZXMgbm90IGltcGxlbWVudCB3aWR0aC4gUGxlYXNlIGltcGxlbWVudCBpdCBvciB1c2UgdGhlIFwidW5vcHRpbWl6ZWRcIiBwcm9wZXJ0eSBpbnN0ZWFkLmAgKyBgXFxuUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9uZXh0LWltYWdlLW1pc3NpbmctbG9hZGVyLXdpZHRoYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmICFwZXJmT2JzZXJ2ZXIgJiYgd2luZG93LlBlcmZvcm1hbmNlT2JzZXJ2ZXIpIHtcbiAgICAgICAgICAgIHBlcmZPYnNlcnZlciA9IG5ldyBQZXJmb3JtYW5jZU9ic2VydmVyKChlbnRyeUxpc3QpPT57XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBlbnRyeSBvZiBlbnRyeUxpc3QuZ2V0RW50cmllcygpKXtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlZjtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZSAtIG1pc3NpbmcgXCJMYXJnZXN0Q29udGVudGZ1bFBhaW50XCIgY2xhc3Mgd2l0aCBcImVsZW1lbnRcIiBwcm9wXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGltZ1NyYyA9IChlbnRyeSA9PSBudWxsID8gdm9pZCAwIDogKHJlZiA9IGVudHJ5LmVsZW1lbnQpID09IG51bGwgPyB2b2lkIDAgOiByZWYuc3JjKSB8fCAnJztcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbGNwSW1hZ2UgPSBhbGxJbWdzLmdldChpbWdTcmMpO1xuICAgICAgICAgICAgICAgICAgICBpZiAobGNwSW1hZ2UgJiYgIWxjcEltYWdlLnByaW9yaXR5ICYmIGxjcEltYWdlLnBsYWNlaG9sZGVyICE9PSAnYmx1cicgJiYgIWxjcEltYWdlLnNyYy5zdGFydHNXaXRoKCdkYXRhOicpICYmICFsY3BJbWFnZS5zcmMuc3RhcnRzV2l0aCgnYmxvYjonKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gaHR0cHM6Ly93ZWIuZGV2L2xjcC8jbWVhc3VyZS1sY3AtaW4tamF2YXNjcmlwdFxuICAgICAgICAgICAgICAgICAgICAgICAgKDAsIF91dGlscykud2Fybk9uY2UoYEltYWdlIHdpdGggc3JjIFwiJHtsY3BJbWFnZS5zcmN9XCIgd2FzIGRldGVjdGVkIGFzIHRoZSBMYXJnZXN0IENvbnRlbnRmdWwgUGFpbnQgKExDUCkuIFBsZWFzZSBhZGQgdGhlIFwicHJpb3JpdHlcIiBwcm9wZXJ0eSBpZiB0aGlzIGltYWdlIGlzIGFib3ZlIHRoZSBmb2xkLmAgKyBgXFxuUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9hcGktcmVmZXJlbmNlL25leHQvaW1hZ2UjcHJpb3JpdHlgKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBwZXJmT2JzZXJ2ZXIub2JzZXJ2ZSh7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdsYXJnZXN0LWNvbnRlbnRmdWwtcGFpbnQnLFxuICAgICAgICAgICAgICAgICAgICBidWZmZXJlZDogdHJ1ZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgLy8gTG9nIGVycm9yIGJ1dCBkb24ndCBjcmFzaCB0aGUgYXBwXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGltZ1N0eWxlID0gT2JqZWN0LmFzc2lnbihmaWxsID8ge1xuICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIGxlZnQ6IDAsXG4gICAgICAgIHRvcDogMCxcbiAgICAgICAgcmlnaHQ6IDAsXG4gICAgICAgIGJvdHRvbTogMFxuICAgIH0gOiB7fSwgc2hvd0FsdFRleHQgPyB7fSA6IHtcbiAgICAgICAgY29sb3I6ICd0cmFuc3BhcmVudCdcbiAgICB9LCBzdHlsZSk7XG4gICAgY29uc3QgYmx1clN0eWxlID0gcGxhY2Vob2xkZXIgPT09ICdibHVyJyAmJiBibHVyRGF0YVVSTCAmJiAhYmx1ckNvbXBsZXRlID8ge1xuICAgICAgICBiYWNrZ3JvdW5kU2l6ZTogaW1nU3R5bGUub2JqZWN0Rml0IHx8ICdjb3ZlcicsXG4gICAgICAgIGJhY2tncm91bmRQb3NpdGlvbjogaW1nU3R5bGUub2JqZWN0UG9zaXRpb24gfHwgJzUwJSA1MCUnLFxuICAgICAgICBiYWNrZ3JvdW5kUmVwZWF0OiAnbm8tcmVwZWF0JyxcbiAgICAgICAgYmFja2dyb3VuZEltYWdlOiBgdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sO2NoYXJzZXQ9dXRmLTgsJHsoMCwgX2ltYWdlQmx1clN2ZykuZ2V0SW1hZ2VCbHVyU3ZnKHtcbiAgICAgICAgICAgIHdpZHRoSW50LFxuICAgICAgICAgICAgaGVpZ2h0SW50LFxuICAgICAgICAgICAgYmx1cldpZHRoLFxuICAgICAgICAgICAgYmx1ckhlaWdodCxcbiAgICAgICAgICAgIGJsdXJEYXRhVVJMXG4gICAgICAgIH0pfVwiKWBcbiAgICB9IDoge307XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgICAgIGlmIChibHVyU3R5bGUuYmFja2dyb3VuZEltYWdlICYmIChibHVyRGF0YVVSTCA9PSBudWxsID8gdm9pZCAwIDogYmx1ckRhdGFVUkwuc3RhcnRzV2l0aCgnLycpKSkge1xuICAgICAgICAgICAgLy8gRHVyaW5nIGBuZXh0IGRldmAsIHdlIGRvbid0IHdhbnQgdG8gZ2VuZXJhdGUgYmx1ciBwbGFjZWhvbGRlcnMgd2l0aCB3ZWJwYWNrXG4gICAgICAgICAgICAvLyBiZWNhdXNlIGl0IGNhbiBkZWxheSBzdGFydGluZyB0aGUgZGV2IHNlcnZlci4gSW5zdGVhZCwgYG5leHQtaW1hZ2UtbG9hZGVyLmpzYFxuICAgICAgICAgICAgLy8gd2lsbCBpbmxpbmUgYSBzcGVjaWFsIHVybCB0byBsYXppbHkgZ2VuZXJhdGUgdGhlIGJsdXIgcGxhY2Vob2xkZXIgYXQgcmVxdWVzdCB0aW1lLlxuICAgICAgICAgICAgYmx1clN0eWxlLmJhY2tncm91bmRJbWFnZSA9IGB1cmwoXCIke2JsdXJEYXRhVVJMfVwiKWA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgaW1nQXR0cmlidXRlcyA9IGdlbmVyYXRlSW1nQXR0cnMoe1xuICAgICAgICBjb25maWcsXG4gICAgICAgIHNyYyxcbiAgICAgICAgdW5vcHRpbWl6ZWQsXG4gICAgICAgIHdpZHRoOiB3aWR0aEludCxcbiAgICAgICAgcXVhbGl0eTogcXVhbGl0eUludCxcbiAgICAgICAgc2l6ZXMsXG4gICAgICAgIGxvYWRlclxuICAgIH0pO1xuICAgIGxldCBzcmNTdHJpbmcgPSBzcmM7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBsZXQgZnVsbFVybDtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgZnVsbFVybCA9IG5ldyBVUkwoaW1nQXR0cmlidXRlcy5zcmMpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIGZ1bGxVcmwgPSBuZXcgVVJMKGltZ0F0dHJpYnV0ZXMuc3JjLCB3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhbGxJbWdzLnNldChmdWxsVXJsLmhyZWYsIHtcbiAgICAgICAgICAgICAgICBzcmMsXG4gICAgICAgICAgICAgICAgcHJpb3JpdHksXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGxldCBpbWFnZVNyY1NldFByb3BOYW1lID0gJ2ltYWdlc3Jjc2V0JztcbiAgICBsZXQgaW1hZ2VTaXplc1Byb3BOYW1lID0gJ2ltYWdlc2l6ZXMnO1xuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfUkVBQ1RfUk9PVCkge1xuICAgICAgICBpbWFnZVNyY1NldFByb3BOYW1lID0gJ2ltYWdlU3JjU2V0JztcbiAgICAgICAgaW1hZ2VTaXplc1Byb3BOYW1lID0gJ2ltYWdlU2l6ZXMnO1xuICAgIH1cbiAgICBjb25zdCBsaW5rUHJvcHMgPSB7XG4gICAgICAgIC8vIE5vdGU6IGltYWdlc3Jjc2V0IGFuZCBpbWFnZXNpemVzIGFyZSBub3QgaW4gdGhlIGxpbmsgZWxlbWVudCB0eXBlIHdpdGggcmVhY3QgMTcuXG4gICAgICAgIFtpbWFnZVNyY1NldFByb3BOYW1lXTogaW1nQXR0cmlidXRlcy5zcmNTZXQsXG4gICAgICAgIFtpbWFnZVNpemVzUHJvcE5hbWVdOiBpbWdBdHRyaWJ1dGVzLnNpemVzLFxuICAgICAgICBjcm9zc09yaWdpbjogcmVzdC5jcm9zc09yaWdpblxuICAgIH07XG4gICAgY29uc3Qgb25Mb2FkaW5nQ29tcGxldGVSZWYgPSAoMCwgX3JlYWN0KS51c2VSZWYob25Mb2FkaW5nQ29tcGxldGUpO1xuICAgICgwLCBfcmVhY3QpLnVzZUVmZmVjdCgoKT0+e1xuICAgICAgICBvbkxvYWRpbmdDb21wbGV0ZVJlZi5jdXJyZW50ID0gb25Mb2FkaW5nQ29tcGxldGU7XG4gICAgfSwgW1xuICAgICAgICBvbkxvYWRpbmdDb21wbGV0ZVxuICAgIF0pO1xuICAgIGNvbnN0IGltZ0VsZW1lbnRBcmdzID0gX2V4dGVuZHMoe1xuICAgICAgICBpc0xhenksXG4gICAgICAgIGltZ0F0dHJpYnV0ZXMsXG4gICAgICAgIGhlaWdodEludCxcbiAgICAgICAgd2lkdGhJbnQsXG4gICAgICAgIHF1YWxpdHlJbnQsXG4gICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICAgaW1nU3R5bGUsXG4gICAgICAgIGJsdXJTdHlsZSxcbiAgICAgICAgbG9hZGluZyxcbiAgICAgICAgY29uZmlnLFxuICAgICAgICBmaWxsLFxuICAgICAgICB1bm9wdGltaXplZCxcbiAgICAgICAgcGxhY2Vob2xkZXIsXG4gICAgICAgIGxvYWRlcixcbiAgICAgICAgc3JjU3RyaW5nLFxuICAgICAgICBvbkxvYWRpbmdDb21wbGV0ZVJlZixcbiAgICAgICAgc2V0Qmx1ckNvbXBsZXRlLFxuICAgICAgICBzZXRTaG93QWx0VGV4dFxuICAgIH0sIHJlc3QpO1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0LmRlZmF1bHQuRnJhZ21lbnQsIG51bGwsIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChJbWFnZUVsZW1lbnQsIE9iamVjdC5hc3NpZ24oe30sIGltZ0VsZW1lbnRBcmdzKSksIHByaW9yaXR5ID8gLy8gTm90ZSBob3cgd2Ugb21pdCB0aGUgYGhyZWZgIGF0dHJpYnV0ZSwgYXMgaXQgd291bGQgb25seSBiZSByZWxldmFudFxuICAgIC8vIGZvciBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IGBpbWFnZXNyY3NldGAsIGFuZCBpbiB0aG9zZSBjYXNlc1xuICAgIC8vIGl0IHdvdWxkIGxpa2VseSBjYXVzZSB0aGUgaW5jb3JyZWN0IGltYWdlIHRvIGJlIHByZWxvYWRlZC5cbiAgICAvL1xuICAgIC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3NlbWFudGljcy5odG1sI2F0dHItbGluay1pbWFnZXNyY3NldFxuICAgIC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfaGVhZC5kZWZhdWx0LCBudWxsLCAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIsIE9iamVjdC5hc3NpZ24oe1xuICAgICAgICBrZXk6ICdfX25pbWctJyArIGltZ0F0dHJpYnV0ZXMuc3JjICsgaW1nQXR0cmlidXRlcy5zcmNTZXQgKyBpbWdBdHRyaWJ1dGVzLnNpemVzLFxuICAgICAgICByZWw6IFwicHJlbG9hZFwiLFxuICAgICAgICBhczogXCJpbWFnZVwiLFxuICAgICAgICBocmVmOiBpbWdBdHRyaWJ1dGVzLnNyY1NldCA/IHVuZGVmaW5lZCA6IGltZ0F0dHJpYnV0ZXMuc3JjXG4gICAgfSwgbGlua1Byb3BzKSkpIDogbnVsbCk7XG59XG4nY2xpZW50JztcbmNvbnN0IGNvbmZpZ0VudiA9IHByb2Nlc3MuZW52Ll9fTkVYVF9JTUFHRV9PUFRTO1xuY29uc3QgYWxsSW1ncyA9IG5ldyBNYXAoKTtcbmxldCBwZXJmT2JzZXJ2ZXI7XG5pZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBnbG9iYWwuX19ORVhUX0lNQUdFX0lNUE9SVEVEID0gdHJ1ZTtcbn1cbmNvbnN0IFZBTElEX0xPQURJTkdfVkFMVUVTID0gW1xuICAgICdsYXp5JyxcbiAgICAnZWFnZXInLFxuICAgIHVuZGVmaW5lZFxuXTtcbmZ1bmN0aW9uIGlzU3RhdGljUmVxdWlyZShzcmMpIHtcbiAgICByZXR1cm4gc3JjLmRlZmF1bHQgIT09IHVuZGVmaW5lZDtcbn1cbmZ1bmN0aW9uIGlzU3RhdGljSW1hZ2VEYXRhKHNyYykge1xuICAgIHJldHVybiBzcmMuc3JjICE9PSB1bmRlZmluZWQ7XG59XG5mdW5jdGlvbiBpc1N0YXRpY0ltcG9ydChzcmMpIHtcbiAgICByZXR1cm4gdHlwZW9mIHNyYyA9PT0gJ29iamVjdCcgJiYgKGlzU3RhdGljUmVxdWlyZShzcmMpIHx8IGlzU3RhdGljSW1hZ2VEYXRhKHNyYykpO1xufVxuZnVuY3Rpb24gZ2V0V2lkdGhzKHsgZGV2aWNlU2l6ZXMgLCBhbGxTaXplcyAgfSwgd2lkdGgsIHNpemVzKSB7XG4gICAgaWYgKHNpemVzKSB7XG4gICAgICAgIC8vIEZpbmQgYWxsIHRoZSBcInZ3XCIgcGVyY2VudCBzaXplcyB1c2VkIGluIHRoZSBzaXplcyBwcm9wXG4gICAgICAgIGNvbnN0IHZpZXdwb3J0V2lkdGhSZSA9IC8oXnxcXHMpKDE/XFxkP1xcZCl2dy9nO1xuICAgICAgICBjb25zdCBwZXJjZW50U2l6ZXMgPSBbXTtcbiAgICAgICAgZm9yKGxldCBtYXRjaDsgbWF0Y2ggPSB2aWV3cG9ydFdpZHRoUmUuZXhlYyhzaXplcyk7IG1hdGNoKXtcbiAgICAgICAgICAgIHBlcmNlbnRTaXplcy5wdXNoKHBhcnNlSW50KG1hdGNoWzJdKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHBlcmNlbnRTaXplcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNvbnN0IHNtYWxsZXN0UmF0aW8gPSBNYXRoLm1pbiguLi5wZXJjZW50U2l6ZXMpICogMC4wMTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgd2lkdGhzOiBhbGxTaXplcy5maWx0ZXIoKHMpPT5zID49IGRldmljZVNpemVzWzBdICogc21hbGxlc3RSYXRpbyksXG4gICAgICAgICAgICAgICAga2luZDogJ3cnXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB3aWR0aHM6IGFsbFNpemVzLFxuICAgICAgICAgICAga2luZDogJ3cnXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmICh0eXBlb2Ygd2lkdGggIT09ICdudW1iZXInKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB3aWR0aHM6IGRldmljZVNpemVzLFxuICAgICAgICAgICAga2luZDogJ3cnXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0IHdpZHRocyA9IFtcbiAgICAgICAgLi4ubmV3IFNldCgvLyA+IFRoaXMgbWVhbnMgdGhhdCBtb3N0IE9MRUQgc2NyZWVucyB0aGF0IHNheSB0aGV5IGFyZSAzeCByZXNvbHV0aW9uLFxuICAgICAgICAvLyA+IGFyZSBhY3R1YWxseSAzeCBpbiB0aGUgZ3JlZW4gY29sb3IsIGJ1dCBvbmx5IDEuNXggaW4gdGhlIHJlZCBhbmRcbiAgICAgICAgLy8gPiBibHVlIGNvbG9ycy4gU2hvd2luZyBhIDN4IHJlc29sdXRpb24gaW1hZ2UgaW4gdGhlIGFwcCB2cyBhIDJ4XG4gICAgICAgIC8vID4gcmVzb2x1dGlvbiBpbWFnZSB3aWxsIGJlIHZpc3VhbGx5IHRoZSBzYW1lLCB0aG91Z2ggdGhlIDN4IGltYWdlXG4gICAgICAgIC8vID4gdGFrZXMgc2lnbmlmaWNhbnRseSBtb3JlIGRhdGEuIEV2ZW4gdHJ1ZSAzeCByZXNvbHV0aW9uIHNjcmVlbnMgYXJlXG4gICAgICAgIC8vID4gd2FzdGVmdWwgYXMgdGhlIGh1bWFuIGV5ZSBjYW5ub3Qgc2VlIHRoYXQgbGV2ZWwgb2YgZGV0YWlsIHdpdGhvdXRcbiAgICAgICAgLy8gPiBzb21ldGhpbmcgbGlrZSBhIG1hZ25pZnlpbmcgZ2xhc3MuXG4gICAgICAgIC8vIGh0dHBzOi8vYmxvZy50d2l0dGVyLmNvbS9lbmdpbmVlcmluZy9lbl91cy90b3BpY3MvaW5mcmFzdHJ1Y3R1cmUvMjAxOS9jYXBwaW5nLWltYWdlLWZpZGVsaXR5LW9uLXVsdHJhLWhpZ2gtcmVzb2x1dGlvbi1kZXZpY2VzLmh0bWxcbiAgICAgICAgW1xuICAgICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgICB3aWR0aCAqIDIgLyosIHdpZHRoICogMyovIFxuICAgICAgICBdLm1hcCgodyk9PmFsbFNpemVzLmZpbmQoKHApPT5wID49IHcpIHx8IGFsbFNpemVzW2FsbFNpemVzLmxlbmd0aCAtIDFdKSksIFxuICAgIF07XG4gICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGhzLFxuICAgICAgICBraW5kOiAneCdcbiAgICB9O1xufVxuZnVuY3Rpb24gZ2VuZXJhdGVJbWdBdHRycyh7IGNvbmZpZyAsIHNyYyAsIHVub3B0aW1pemVkICwgd2lkdGggLCBxdWFsaXR5ICwgc2l6ZXMgLCBsb2FkZXIgIH0pIHtcbiAgICBpZiAodW5vcHRpbWl6ZWQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNyYyxcbiAgICAgICAgICAgIHNyY1NldDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgc2l6ZXM6IHVuZGVmaW5lZFxuICAgICAgICB9O1xuICAgIH1cbiAgICBjb25zdCB7IHdpZHRocyAsIGtpbmQgIH0gPSBnZXRXaWR0aHMoY29uZmlnLCB3aWR0aCwgc2l6ZXMpO1xuICAgIGNvbnN0IGxhc3QgPSB3aWR0aHMubGVuZ3RoIC0gMTtcbiAgICByZXR1cm4ge1xuICAgICAgICBzaXplczogIXNpemVzICYmIGtpbmQgPT09ICd3JyA/ICcxMDB2dycgOiBzaXplcyxcbiAgICAgICAgc3JjU2V0OiB3aWR0aHMubWFwKCh3LCBpKT0+YCR7bG9hZGVyKHtcbiAgICAgICAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgICAgICAgc3JjLFxuICAgICAgICAgICAgICAgIHF1YWxpdHksXG4gICAgICAgICAgICAgICAgd2lkdGg6IHdcbiAgICAgICAgICAgIH0pfSAke2tpbmQgPT09ICd3JyA/IHcgOiBpICsgMX0ke2tpbmR9YCkuam9pbignLCAnKSxcbiAgICAgICAgLy8gSXQncyBpbnRlbmRlZCB0byBrZWVwIGBzcmNgIHRoZSBsYXN0IGF0dHJpYnV0ZSBiZWNhdXNlIFJlYWN0IHVwZGF0ZXNcbiAgICAgICAgLy8gYXR0cmlidXRlcyBpbiBvcmRlci4gSWYgd2Uga2VlcCBgc3JjYCB0aGUgZmlyc3Qgb25lLCBTYWZhcmkgd2lsbFxuICAgICAgICAvLyBpbW1lZGlhdGVseSBzdGFydCB0byBmZXRjaCBgc3JjYCwgYmVmb3JlIGBzaXplc2AgYW5kIGBzcmNTZXRgIGFyZSBldmVuXG4gICAgICAgIC8vIHVwZGF0ZWQgYnkgUmVhY3QuIFRoYXQgY2F1c2VzIG11bHRpcGxlIHVubmVjZXNzYXJ5IHJlcXVlc3RzIGlmIGBzcmNTZXRgXG4gICAgICAgIC8vIGFuZCBgc2l6ZXNgIGFyZSBkZWZpbmVkLlxuICAgICAgICAvLyBUaGlzIGJ1ZyBjYW5ub3QgYmUgcmVwcm9kdWNlZCBpbiBDaHJvbWUgb3IgRmlyZWZveC5cbiAgICAgICAgc3JjOiBsb2FkZXIoe1xuICAgICAgICAgICAgY29uZmlnLFxuICAgICAgICAgICAgc3JjLFxuICAgICAgICAgICAgcXVhbGl0eSxcbiAgICAgICAgICAgIHdpZHRoOiB3aWR0aHNbbGFzdF1cbiAgICAgICAgfSlcbiAgICB9O1xufVxuZnVuY3Rpb24gZ2V0SW50KHgpIHtcbiAgICBpZiAodHlwZW9mIHggPT09ICdudW1iZXInIHx8IHR5cGVvZiB4ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4geDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB4ID09PSAnc3RyaW5nJyAmJiAvXlswLTldKyQvLnRlc3QoeCkpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlSW50KHgsIDEwKTtcbiAgICB9XG4gICAgcmV0dXJuIE5hTjtcbn1cbi8vIFNlZSBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3EvMzk3Nzc4MzMvMjY2NTM1IGZvciB3aHkgd2UgdXNlIHRoaXMgcmVmXG4vLyBoYW5kbGVyIGluc3RlYWQgb2YgdGhlIGltZydzIG9uTG9hZCBhdHRyaWJ1dGUuXG5mdW5jdGlvbiBoYW5kbGVMb2FkaW5nKGltZywgc3JjLCBwbGFjZWhvbGRlciwgb25Mb2FkaW5nQ29tcGxldGVSZWYsIHNldEJsdXJDb21wbGV0ZSkge1xuICAgIGlmICghaW1nIHx8IGltZ1snZGF0YS1sb2FkZWQtc3JjJ10gPT09IHNyYykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGltZ1snZGF0YS1sb2FkZWQtc3JjJ10gPSBzcmM7XG4gICAgY29uc3QgcCA9ICdkZWNvZGUnIGluIGltZyA/IGltZy5kZWNvZGUoKSA6IFByb21pc2UucmVzb2x2ZSgpO1xuICAgIHAuY2F0Y2goKCk9Pnt9KS50aGVuKCgpPT57XG4gICAgICAgIGlmICghaW1nLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgIC8vIEV4aXQgZWFybHkgaW4gY2FzZSBvZiByYWNlIGNvbmRpdGlvbjpcbiAgICAgICAgICAgIC8vIC0gb25sb2FkKCkgaXMgY2FsbGVkXG4gICAgICAgICAgICAvLyAtIGRlY29kZSgpIGlzIGNhbGxlZCBidXQgaW5jb21wbGV0ZVxuICAgICAgICAgICAgLy8gLSB1bm1vdW50IGlzIGNhbGxlZFxuICAgICAgICAgICAgLy8gLSBkZWNvZGUoKSBjb21wbGV0ZXNcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAocGxhY2Vob2xkZXIgPT09ICdibHVyJykge1xuICAgICAgICAgICAgc2V0Qmx1ckNvbXBsZXRlKHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvbkxvYWRpbmdDb21wbGV0ZVJlZiA9PSBudWxsID8gdm9pZCAwIDogb25Mb2FkaW5nQ29tcGxldGVSZWYuY3VycmVudCkge1xuICAgICAgICAgICAgb25Mb2FkaW5nQ29tcGxldGVSZWYuY3VycmVudChpbWcpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICBpZiAoaW1nLmdldEF0dHJpYnV0ZSgnZGF0YS1uaW1nJykgPT09ICdmdXR1cmUtZmlsbCcpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWltZy5nZXRBdHRyaWJ1dGUoJ3NpemVzJykgfHwgaW1nLmdldEF0dHJpYnV0ZSgnc2l6ZXMnKSA9PT0gJzEwMHZ3Jykge1xuICAgICAgICAgICAgICAgICAgICBsZXQgd2lkdGhWaWV3cG9ydFJhdGlvID0gaW1nLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoIC8gd2luZG93LmlubmVyV2lkdGg7XG4gICAgICAgICAgICAgICAgICAgIGlmICh3aWR0aFZpZXdwb3J0UmF0aW8gPCAwLjYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICgwLCBfdXRpbHMpLndhcm5PbmNlKGBJbWFnZSB3aXRoIHNyYyBcIiR7c3JjfVwiIGhhcyBcImZpbGxcIiBidXQgaXMgbWlzc2luZyBcInNpemVzXCIgcHJvcC4gUGxlYXNlIGFkZCBpdCB0byBpbXByb3ZlIHBhZ2UgcGVyZm9ybWFuY2UuIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBpLXJlZmVyZW5jZS9uZXh0L2Z1dHVyZS9pbWFnZSNzaXplc2ApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChpbWcucGFyZW50RWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IHBvc2l0aW9uICB9ID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoaW1nLnBhcmVudEVsZW1lbnQpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2YWxpZCA9IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICdhYnNvbHV0ZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAnZml4ZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ3JlbGF0aXZlJ1xuICAgICAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXZhbGlkLmluY2x1ZGVzKHBvc2l0aW9uKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgKDAsIF91dGlscykud2Fybk9uY2UoYEltYWdlIHdpdGggc3JjIFwiJHtzcmN9XCIgaGFzIFwiZmlsbFwiIGFuZCBwYXJlbnQgZWxlbWVudCB3aXRoIGludmFsaWQgXCJwb3NpdGlvblwiLiBQcm92aWRlZCBcIiR7cG9zaXRpb259XCIgc2hvdWxkIGJlIG9uZSBvZiAke3ZhbGlkLm1hcChTdHJpbmcpLmpvaW4oJywnKX0uYCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGltZy5oZWlnaHQgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgKDAsIF91dGlscykud2Fybk9uY2UoYEltYWdlIHdpdGggc3JjIFwiJHtzcmN9XCIgaGFzIFwiZmlsbFwiIGFuZCBhIGhlaWdodCB2YWx1ZSBvZiAwLiBUaGlzIGlzIGxpa2VseSBiZWNhdXNlIHRoZSBwYXJlbnQgZWxlbWVudCBvZiB0aGUgaW1hZ2UgaGFzIG5vdCBiZWVuIHN0eWxlZCB0byBoYXZlIGEgc2V0IGhlaWdodC5gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBoZWlnaHRNb2RpZmllZCA9IGltZy5oZWlnaHQudG9TdHJpbmcoKSAhPT0gaW1nLmdldEF0dHJpYnV0ZSgnaGVpZ2h0Jyk7XG4gICAgICAgICAgICBjb25zdCB3aWR0aE1vZGlmaWVkID0gaW1nLndpZHRoLnRvU3RyaW5nKCkgIT09IGltZy5nZXRBdHRyaWJ1dGUoJ3dpZHRoJyk7XG4gICAgICAgICAgICBpZiAoaGVpZ2h0TW9kaWZpZWQgJiYgIXdpZHRoTW9kaWZpZWQgfHwgIWhlaWdodE1vZGlmaWVkICYmIHdpZHRoTW9kaWZpZWQpIHtcbiAgICAgICAgICAgICAgICAoMCwgX3V0aWxzKS53YXJuT25jZShgSW1hZ2Ugd2l0aCBzcmMgXCIke3NyY31cIiBoYXMgZWl0aGVyIHdpZHRoIG9yIGhlaWdodCBtb2RpZmllZCwgYnV0IG5vdCB0aGUgb3RoZXIuIElmIHlvdSB1c2UgQ1NTIHRvIGNoYW5nZSB0aGUgc2l6ZSBvZiB5b3VyIGltYWdlLCBhbHNvIGluY2x1ZGUgdGhlIHN0eWxlcyAnd2lkdGg6IFwiYXV0b1wiJyBvciAnaGVpZ2h0OiBcImF1dG9cIicgdG8gbWFpbnRhaW4gdGhlIGFzcGVjdCByYXRpby5gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xufVxuY29uc3QgSW1hZ2VFbGVtZW50ID0gKF9wYXJhbSk9PntcbiAgICB2YXIgeyBpbWdBdHRyaWJ1dGVzICwgaGVpZ2h0SW50ICwgd2lkdGhJbnQgLCBxdWFsaXR5SW50ICwgY2xhc3NOYW1lICwgaW1nU3R5bGUgLCBibHVyU3R5bGUgLCBpc0xhenkgLCBmaWxsICwgcGxhY2Vob2xkZXIgLCBsb2FkaW5nICwgc3JjU3RyaW5nICwgY29uZmlnICwgdW5vcHRpbWl6ZWQgLCBsb2FkZXIgLCBvbkxvYWRpbmdDb21wbGV0ZVJlZiAsIHNldEJsdXJDb21wbGV0ZSAsIHNldFNob3dBbHRUZXh0ICwgb25Mb2FkICwgb25FcnJvciAgfSA9IF9wYXJhbSwgcmVzdCA9IF9vYmplY3Rfd2l0aG91dF9wcm9wZXJ0aWVzX2xvb3NlKF9wYXJhbSwgW1xuICAgICAgICBcImltZ0F0dHJpYnV0ZXNcIixcbiAgICAgICAgXCJoZWlnaHRJbnRcIixcbiAgICAgICAgXCJ3aWR0aEludFwiLFxuICAgICAgICBcInF1YWxpdHlJbnRcIixcbiAgICAgICAgXCJjbGFzc05hbWVcIixcbiAgICAgICAgXCJpbWdTdHlsZVwiLFxuICAgICAgICBcImJsdXJTdHlsZVwiLFxuICAgICAgICBcImlzTGF6eVwiLFxuICAgICAgICBcImZpbGxcIixcbiAgICAgICAgXCJwbGFjZWhvbGRlclwiLFxuICAgICAgICBcImxvYWRpbmdcIixcbiAgICAgICAgXCJzcmNTdHJpbmdcIixcbiAgICAgICAgXCJjb25maWdcIixcbiAgICAgICAgXCJ1bm9wdGltaXplZFwiLFxuICAgICAgICBcImxvYWRlclwiLFxuICAgICAgICBcIm9uTG9hZGluZ0NvbXBsZXRlUmVmXCIsXG4gICAgICAgIFwic2V0Qmx1ckNvbXBsZXRlXCIsXG4gICAgICAgIFwic2V0U2hvd0FsdFRleHRcIixcbiAgICAgICAgXCJvbkxvYWRcIixcbiAgICAgICAgXCJvbkVycm9yXCJcbiAgICBdKTtcbiAgICBsb2FkaW5nID0gaXNMYXp5ID8gJ2xhenknIDogbG9hZGluZztcbiAgICByZXR1cm4gLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdC5kZWZhdWx0LkZyYWdtZW50LCBudWxsLCAvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIiwgT2JqZWN0LmFzc2lnbih7fSwgcmVzdCwgaW1nQXR0cmlidXRlcywge1xuICAgICAgICB3aWR0aDogd2lkdGhJbnQsXG4gICAgICAgIGhlaWdodDogaGVpZ2h0SW50LFxuICAgICAgICBkZWNvZGluZzogXCJhc3luY1wiLFxuICAgICAgICBcImRhdGEtbmltZ1wiOiBgZnV0dXJlJHtmaWxsID8gJy1maWxsJyA6ICcnfWAsXG4gICAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lLFxuICAgICAgICAvLyBAdHMtaWdub3JlIC0gVE9ETzogdXBncmFkZSB0byBgQHR5cGVzL3JlYWN0QDE3YFxuICAgICAgICBsb2FkaW5nOiBsb2FkaW5nLFxuICAgICAgICBzdHlsZTogX2V4dGVuZHMoe30sIGltZ1N0eWxlLCBibHVyU3R5bGUpLFxuICAgICAgICByZWY6ICgwLCBfcmVhY3QpLnVzZUNhbGxiYWNrKChpbWcpPT57XG4gICAgICAgICAgICBpZiAoIWltZykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChvbkVycm9yKSB7XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIGltYWdlIGhhcyBhbiBlcnJvciBiZWZvcmUgcmVhY3QgaHlkcmF0ZXMsIHRoZW4gdGhlIGVycm9yIGlzIGxvc3QuXG4gICAgICAgICAgICAgICAgLy8gVGhlIHdvcmthcm91bmQgaXMgdG8gd2FpdCB1bnRpbCB0aGUgaW1hZ2UgaXMgbW91bnRlZCB3aGljaCBpcyBhZnRlciBoeWRyYXRpb24sXG4gICAgICAgICAgICAgICAgLy8gdGhlbiB3ZSBzZXQgdGhlIHNyYyBhZ2FpbiB0byB0cmlnZ2VyIHRoZSBlcnJvciBoYW5kbGVyIChpZiB0aGVyZSB3YXMgYW4gZXJyb3IpLlxuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWFzc2lnblxuICAgICAgICAgICAgICAgIGltZy5zcmMgPSBpbWcuc3JjO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXNyY1N0cmluZykge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGBJbWFnZSBpcyBtaXNzaW5nIHJlcXVpcmVkIFwic3JjXCIgcHJvcGVydHk6YCwgaW1nKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGltZy5nZXRBdHRyaWJ1dGUoJ29iamVjdEZpdCcpIHx8IGltZy5nZXRBdHRyaWJ1dGUoJ29iamVjdGZpdCcpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYEltYWdlIGhhcyB1bmtub3duIHByb3AgXCJvYmplY3RGaXRcIi4gRGlkIHlvdSBtZWFuIHRvIHVzZSB0aGUgXCJzdHlsZVwiIHByb3AgaW5zdGVhZD9gLCBpbWcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoaW1nLmdldEF0dHJpYnV0ZSgnb2JqZWN0UG9zaXRpb24nKSB8fCBpbWcuZ2V0QXR0cmlidXRlKCdvYmplY3Rwb3NpdGlvbicpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYEltYWdlIGhhcyB1bmtub3duIHByb3AgXCJvYmplY3RQb3NpdGlvblwiLiBEaWQgeW91IG1lYW4gdG8gdXNlIHRoZSBcInN0eWxlXCIgcHJvcCBpbnN0ZWFkP2AsIGltZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChpbWcuZ2V0QXR0cmlidXRlKCdhbHQnKSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGBJbWFnZSBpcyBtaXNzaW5nIHJlcXVpcmVkIFwiYWx0XCIgcHJvcGVydHkuIFBsZWFzZSBhZGQgQWx0ZXJuYXRpdmUgVGV4dCB0byBkZXNjcmliZSB0aGUgaW1hZ2UgZm9yIHNjcmVlbiByZWFkZXJzIGFuZCBzZWFyY2ggZW5naW5lcy5gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW1nLmNvbXBsZXRlKSB7XG4gICAgICAgICAgICAgICAgaGFuZGxlTG9hZGluZyhpbWcsIHNyY1N0cmluZywgcGxhY2Vob2xkZXIsIG9uTG9hZGluZ0NvbXBsZXRlUmVmLCBzZXRCbHVyQ29tcGxldGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCBbXG4gICAgICAgICAgICBzcmNTdHJpbmcsXG4gICAgICAgICAgICBwbGFjZWhvbGRlcixcbiAgICAgICAgICAgIG9uTG9hZGluZ0NvbXBsZXRlUmVmLFxuICAgICAgICAgICAgc2V0Qmx1ckNvbXBsZXRlLFxuICAgICAgICAgICAgb25FcnJvciwgXG4gICAgICAgIF0pLFxuICAgICAgICBvbkxvYWQ6IChldmVudCk9PntcbiAgICAgICAgICAgIGNvbnN0IGltZyA9IGV2ZW50LmN1cnJlbnRUYXJnZXQ7XG4gICAgICAgICAgICBoYW5kbGVMb2FkaW5nKGltZywgc3JjU3RyaW5nLCBwbGFjZWhvbGRlciwgb25Mb2FkaW5nQ29tcGxldGVSZWYsIHNldEJsdXJDb21wbGV0ZSk7XG4gICAgICAgICAgICBpZiAob25Mb2FkKSB7XG4gICAgICAgICAgICAgICAgb25Mb2FkKGV2ZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgb25FcnJvcjogKGV2ZW50KT0+e1xuICAgICAgICAgICAgLy8gaWYgdGhlIHJlYWwgaW1hZ2UgZmFpbHMgdG8gbG9hZCwgdGhpcyB3aWxsIGVuc3VyZSBcImFsdFwiIGlzIHZpc2libGVcbiAgICAgICAgICAgIHNldFNob3dBbHRUZXh0KHRydWUpO1xuICAgICAgICAgICAgaWYgKHBsYWNlaG9sZGVyID09PSAnYmx1cicpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgcmVhbCBpbWFnZSBmYWlscyB0byBsb2FkLCB0aGlzIHdpbGwgc3RpbGwgcmVtb3ZlIHRoZSBwbGFjZWhvbGRlci5cbiAgICAgICAgICAgICAgICBzZXRCbHVyQ29tcGxldGUodHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAob25FcnJvcikge1xuICAgICAgICAgICAgICAgIG9uRXJyb3IoZXZlbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSkpKTtcbn07XG5mdW5jdGlvbiBkZWZhdWx0TG9hZGVyKHsgY29uZmlnICwgc3JjICwgd2lkdGggLCBxdWFsaXR5ICB9KSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgY29uc3QgbWlzc2luZ1ZhbHVlcyA9IFtdO1xuICAgICAgICAvLyB0aGVzZSBzaG91bGQgYWx3YXlzIGJlIHByb3ZpZGVkIGJ1dCBtYWtlIHN1cmUgdGhleSBhcmVcbiAgICAgICAgaWYgKCFzcmMpIG1pc3NpbmdWYWx1ZXMucHVzaCgnc3JjJyk7XG4gICAgICAgIGlmICghd2lkdGgpIG1pc3NpbmdWYWx1ZXMucHVzaCgnd2lkdGgnKTtcbiAgICAgICAgaWYgKG1pc3NpbmdWYWx1ZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBOZXh0IEltYWdlIE9wdGltaXphdGlvbiByZXF1aXJlcyAke21pc3NpbmdWYWx1ZXMuam9pbignLCAnKX0gdG8gYmUgcHJvdmlkZWQuIE1ha2Ugc3VyZSB5b3UgcGFzcyB0aGVtIGFzIHByb3BzIHRvIHRoZSBcXGBuZXh0L2ltYWdlXFxgIGNvbXBvbmVudC4gUmVjZWl2ZWQ6ICR7SlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICAgIHNyYyxcbiAgICAgICAgICAgICAgICB3aWR0aCxcbiAgICAgICAgICAgICAgICBxdWFsaXR5XG4gICAgICAgICAgICB9KX1gKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc3JjLnN0YXJ0c1dpdGgoJy8vJykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHBhcnNlIHNyYyBcIiR7c3JjfVwiIG9uIFxcYG5leHQvaW1hZ2VcXGAsIHByb3RvY29sLXJlbGF0aXZlIFVSTCAoLy8pIG11c3QgYmUgY2hhbmdlZCB0byBhbiBhYnNvbHV0ZSBVUkwgKGh0dHA6Ly8gb3IgaHR0cHM6Ly8pYCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFzcmMuc3RhcnRzV2l0aCgnLycpICYmIChjb25maWcuZG9tYWlucyB8fCBjb25maWcucmVtb3RlUGF0dGVybnMpKSB7XG4gICAgICAgICAgICBsZXQgcGFyc2VkU3JjO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBwYXJzZWRTcmMgPSBuZXcgVVJMKHNyYyk7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gcGFyc2Ugc3JjIFwiJHtzcmN9XCIgb24gXFxgbmV4dC9pbWFnZVxcYCwgaWYgdXNpbmcgcmVsYXRpdmUgaW1hZ2UgaXQgbXVzdCBzdGFydCB3aXRoIGEgbGVhZGluZyBzbGFzaCBcIi9cIiBvciBiZSBhbiBhYnNvbHV0ZSBVUkwgKGh0dHA6Ly8gb3IgaHR0cHM6Ly8pYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICd0ZXN0Jykge1xuICAgICAgICAgICAgICAgIC8vIFdlIHVzZSBkeW5hbWljIHJlcXVpcmUgYmVjYXVzZSB0aGlzIHNob3VsZCBvbmx5IGVycm9yIGluIGRldmVsb3BtZW50XG4gICAgICAgICAgICAgICAgY29uc3QgeyBoYXNNYXRjaCAgfSA9IHJlcXVpcmUoJy4uLy4uL3NoYXJlZC9saWIvbWF0Y2gtcmVtb3RlLXBhdHRlcm4nKTtcbiAgICAgICAgICAgICAgICBpZiAoIWhhc01hdGNoKGNvbmZpZy5kb21haW5zLCBjb25maWcucmVtb3RlUGF0dGVybnMsIHBhcnNlZFNyYykpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHNyYyBwcm9wICgke3NyY30pIG9uIFxcYG5leHQvaW1hZ2VcXGAsIGhvc3RuYW1lIFwiJHtwYXJzZWRTcmMuaG9zdG5hbWV9XCIgaXMgbm90IGNvbmZpZ3VyZWQgdW5kZXIgaW1hZ2VzIGluIHlvdXIgXFxgbmV4dC5jb25maWcuanNcXGBcXG5gICsgYFNlZSBtb3JlIGluZm86IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL25leHQtaW1hZ2UtdW5jb25maWd1cmVkLWhvc3RgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKHNyYy5lbmRzV2l0aCgnLnN2ZycpICYmICFjb25maWcuZGFuZ2Vyb3VzbHlBbGxvd1NWRykge1xuICAgICAgICAvLyBTcGVjaWFsIGNhc2UgdG8gbWFrZSBzdmcgc2VydmUgYXMtaXMgdG8gYXZvaWQgcHJveHlpbmdcbiAgICAgICAgLy8gdGhyb3VnaCB0aGUgYnVpbHQtaW4gSW1hZ2UgT3B0aW1pemF0aW9uIEFQSS5cbiAgICAgICAgcmV0dXJuIHNyYztcbiAgICB9XG4gICAgcmV0dXJuIGAke2NvbmZpZy5wYXRofT91cmw9JHtlbmNvZGVVUklDb21wb25lbnQoc3JjKX0mdz0ke3dpZHRofSZxPSR7cXVhbGl0eSB8fCA3NX1gO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbWFnZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiSW1hZ2UiLCJfZXh0ZW5kcyIsInJlcXVpcmUiLCJfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQiLCJfaW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkIiwiX29iamVjdF93aXRob3V0X3Byb3BlcnRpZXNfbG9vc2UiLCJfcmVhY3QiLCJfaGVhZCIsIl9pbWFnZUJsdXJTdmciLCJfaW1hZ2VDb25maWciLCJfaW1hZ2VDb25maWdDb250ZXh0IiwiX3V0aWxzIiwiX3BhcmFtIiwic3JjIiwic2l6ZXMiLCJ1bm9wdGltaXplZCIsInByaW9yaXR5IiwibG9hZGluZyIsImNsYXNzTmFtZSIsInF1YWxpdHkiLCJ3aWR0aCIsImhlaWdodCIsImZpbGwiLCJzdHlsZSIsIm9uTG9hZGluZ0NvbXBsZXRlIiwicGxhY2Vob2xkZXIiLCJibHVyRGF0YVVSTCIsImFsbCIsImNvbmZpZ0NvbnRleHQiLCJ1c2VDb250ZXh0IiwiSW1hZ2VDb25maWdDb250ZXh0IiwiY29uZmlnIiwidXNlTWVtbyIsImMiLCJjb25maWdFbnYiLCJpbWFnZUNvbmZpZ0RlZmF1bHQiLCJhbGxTaXplcyIsImRldmljZVNpemVzIiwiaW1hZ2VTaXplcyIsInNvcnQiLCJhIiwiYiIsInJlc3QiLCJsb2FkZXIiLCJkZWZhdWx0TG9hZGVyIiwiY3VzdG9tSW1hZ2VMb2FkZXIiLCJfdG1wIiwib2JqIiwiXyIsIm9wdHMiLCJzdGF0aWNTcmMiLCJ3aWR0aEludCIsImdldEludCIsImhlaWdodEludCIsImJsdXJXaWR0aCIsImJsdXJIZWlnaHQiLCJpc1N0YXRpY0ltcG9ydCIsInN0YXRpY0ltYWdlRGF0YSIsImlzU3RhdGljUmVxdWlyZSIsIkVycm9yIiwiSlNPTiIsInN0cmluZ2lmeSIsInJhdGlvIiwiTWF0aCIsInJvdW5kIiwiaXNMYXp5Iiwic3RhcnRzV2l0aCIsImJsdXJDb21wbGV0ZSIsInNldEJsdXJDb21wbGV0ZSIsInVzZVN0YXRlIiwic2hvd0FsdFRleHQiLCJzZXRTaG93QWx0VGV4dCIsInF1YWxpdHlJbnQiLCJwb3NpdGlvbiIsImlzTmFOIiwiVkFMSURfTE9BRElOR19WQUxVRVMiLCJpbmNsdWRlcyIsIm1hcCIsIlN0cmluZyIsImpvaW4iLCJ3YXJuT25jZSIsIlZBTElEX0JMVVJfRVhUIiwidXJsU3RyIiwidXJsIiwiVVJMIiwiZXJyIiwicGF0aG5hbWUiLCJzZWFyY2giLCJwZXJmT2JzZXJ2ZXIiLCJ3aW5kb3ciLCJQZXJmb3JtYW5jZU9ic2VydmVyIiwiZW50cnlMaXN0IiwiZW50cnkiLCJnZXRFbnRyaWVzIiwicmVmIiwiaW1nU3JjIiwiZWxlbWVudCIsImxjcEltYWdlIiwiYWxsSW1ncyIsImdldCIsIm9ic2VydmUiLCJ0eXBlIiwiYnVmZmVyZWQiLCJjb25zb2xlIiwiZXJyb3IiLCJpbWdTdHlsZSIsImFzc2lnbiIsImxlZnQiLCJ0b3AiLCJyaWdodCIsImJvdHRvbSIsImNvbG9yIiwiYmx1clN0eWxlIiwiYmFja2dyb3VuZFNpemUiLCJvYmplY3RGaXQiLCJiYWNrZ3JvdW5kUG9zaXRpb24iLCJvYmplY3RQb3NpdGlvbiIsImJhY2tncm91bmRSZXBlYXQiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJnZXRJbWFnZUJsdXJTdmciLCJpbWdBdHRyaWJ1dGVzIiwiZ2VuZXJhdGVJbWdBdHRycyIsInNyY1N0cmluZyIsImZ1bGxVcmwiLCJlIiwibG9jYXRpb24iLCJocmVmIiwic2V0IiwiaW1hZ2VTcmNTZXRQcm9wTmFtZSIsImltYWdlU2l6ZXNQcm9wTmFtZSIsInByb2Nlc3MiLCJlbnYiLCJfX05FWFRfUkVBQ1RfUk9PVCIsImxpbmtQcm9wcyIsInNyY1NldCIsImNyb3NzT3JpZ2luIiwib25Mb2FkaW5nQ29tcGxldGVSZWYiLCJ1c2VSZWYiLCJ1c2VFZmZlY3QiLCJjdXJyZW50IiwiaW1nRWxlbWVudEFyZ3MiLCJjcmVhdGVFbGVtZW50IiwiRnJhZ21lbnQiLCJJbWFnZUVsZW1lbnQiLCJrZXkiLCJyZWwiLCJhcyIsInVuZGVmaW5lZCIsIl9fTkVYVF9JTUFHRV9PUFRTIiwiTWFwIiwiZ2xvYmFsIiwiX19ORVhUX0lNQUdFX0lNUE9SVEVEIiwiaXNTdGF0aWNJbWFnZURhdGEiLCJnZXRXaWR0aHMiLCJ2aWV3cG9ydFdpZHRoUmUiLCJwZXJjZW50U2l6ZXMiLCJtYXRjaCIsImV4ZWMiLCJwdXNoIiwicGFyc2VJbnQiLCJsZW5ndGgiLCJzbWFsbGVzdFJhdGlvIiwibWluIiwid2lkdGhzIiwiZmlsdGVyIiwicyIsImtpbmQiLCJTZXQiLCJ3IiwiZmluZCIsInAiLCJsYXN0IiwiaSIsIngiLCJ0ZXN0IiwiTmFOIiwiaGFuZGxlTG9hZGluZyIsImltZyIsImRlY29kZSIsIlByb21pc2UiLCJyZXNvbHZlIiwiY2F0Y2giLCJ0aGVuIiwicGFyZW50Tm9kZSIsImdldEF0dHJpYnV0ZSIsIndpZHRoVmlld3BvcnRSYXRpbyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImlubmVyV2lkdGgiLCJwYXJlbnRFbGVtZW50IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsInZhbGlkIiwiaGVpZ2h0TW9kaWZpZWQiLCJ0b1N0cmluZyIsIndpZHRoTW9kaWZpZWQiLCJvbkxvYWQiLCJvbkVycm9yIiwiZGVjb2RpbmciLCJ1c2VDYWxsYmFjayIsImNvbXBsZXRlIiwiZXZlbnQiLCJjdXJyZW50VGFyZ2V0IiwibWlzc2luZ1ZhbHVlcyIsImRvbWFpbnMiLCJyZW1vdGVQYXR0ZXJucyIsInBhcnNlZFNyYyIsImhhc01hdGNoIiwiaG9zdG5hbWUiLCJlbmRzV2l0aCIsImRhbmdlcm91c2x5QWxsb3dTVkciLCJwYXRoIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiX19lc01vZHVsZSIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/future/image.js\n");

/***/ }),

/***/ "./node_modules/next/future/image.js":
/*!*******************************************!*\
  !*** ./node_modules/next/future/image.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ../dist/client/future/image */ \"./node_modules/next/dist/client/future/image.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9mdXR1cmUvaW1hZ2UuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsMEhBQXVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHdhLXByb2plY3QvLi9ub2RlX21vZHVsZXMvbmV4dC9mdXR1cmUvaW1hZ2UuanM/YzA0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL2Rpc3QvY2xpZW50L2Z1dHVyZS9pbWFnZScpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/future/image.js\n");

/***/ })

};
;